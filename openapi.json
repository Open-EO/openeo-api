{
  "openapi": "3.0.2",
  "servers": [
    {
      "url": "https://localhost/api/{version}",
      "description": "The URL of the API MAY freely be chosen by the back-end providers. The path, including API versioning, is a *recommendation* only. Nevertheless, all servers MUST support HTTPS as the authentication methods are not secure with HTTP only!",
      "variables": {
        "version": {
          "default": "v0.4",
          "description": "API versioning is RECOMMENDED. As the openEO API is following [SemVer](https://semver.org/) only the MAJOR part of the stable version numbers (i.e. versions >= 1.0.0) SHOULD be used for API versioning in the URL. The reason is that backward-incompatible changes are usually introduced by major changes. Therefore, the version number in the URL MUST not be used by the clients to detect the version number of the API. Use the version number returned from `GET /` instead."
        }
      }
    }
  ],
  "info": {
    "title": "openEO API",
    "version": "0.4.2",
    "description": "The openEO API specification for interoperable cloud-based processing of large Earth observation datasets.\n \n**Make sure to take account of several global API specifications**, which are not (fully) covered in this specification:\n * [Cross-Origin Resource Sharing (CORS) support](https://open-eo.github.io/openeo-api/v/0.4.2/cors/index.html) to allow browser-based access to the API.\n * [Error handling](https://open-eo.github.io/openeo-api/v/0.4.2/errors/index.html)\n * Unless otherwise stated the API works *case sensitive*.",
    "contact": {
      "name": "openEO Consortium",
      "url": "http://www.openeo.org",
      "email": "openeo@list.tuwien.ac.at"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "externalDocs": {
    "description": "openEO Documentation",
    "url": "https://open-eo.github.io/openeo-api/v/0.4.2/"
  },
  "tags": [
    {
      "name": "Capabilities",
      "description": "General information about the API implementation and other supported capabilities at the back-end."
    },
    {
      "name": "EO Data Discovery",
      "description": "Discovery of Earth observation collections that are available at the back-end."
    },
    {
      "name": "Process Discovery",
      "description": "Discovery of processes that are available at the back-end."
    },
    {
      "name": "Account Management",
      "description": "User management, accounting and authentication."
    },
    {
      "name": "File Management",
      "description": "Management of user-uploaded assets and processed data."
    },
    {
      "name": "Process Graph Management",
      "description": "Management of stored process graphs."
    },
    {
      "name": "Batch Job Management",
      "description": "Management of batch processing tasks (jobs) and their results."
    },
    {
      "name": "Secondary Services Management",
      "description": "On-demand access to data using other web service protocols."
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "Information about the back-end",
        "description": "Returns general information about the back-end, including which version and endpoints of the openEO API are supported. May also include billing information.",
        "tags": [
          "Capabilities"
        ],
        "security": [
          {}
        ],
        "responses": {
          "200": {
            "description": "Information about the API version and supported endpoints / features.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Capabilities Response",
                  "type": "object",
                  "required": [
                    "title",
                    "description",
                    "api_version",
                    "backend_version",
                    "endpoints"
                  ],
                  "properties": {
                    "api_version": {
                      "type": "string",
                      "description": "Version number of the openEO specification this back-end implements.",
                      "example": "0.4.2"
                    },
                    "backend_version": {
                      "type": "string",
                      "description": "Version number of the back-end implementation.\nEvery change on back-end side MUST cause a change of the version number.",
                      "example": "1.1.2"
                    },
                    "title": {
                      "type": "string",
                      "description": "The name of the service.",
                      "example": "Cool Cloud EOPS"
                    },
                    "description": {
                      "type": "string",
                      "description": "A description of the service, which allows the service provider to introduce the user to its service.\n[CommonMark 0.28](http://commonmark.org/) syntax MAY be used for rich text representation.",
                      "example": "EOPS - the most advanced EO processing service - is provided to you by [Cool Cloud Corp.](http://cool-cloud-corp.com). It implements the full openEO API and allows to process a range of 999 EO data sets, including \n* Sentinel 1/2/3 and 5\n* Landsat 7/8\n\nA free plan is available to test the service. For further information please contact our customer service at [support@cool-cloud-corp.com](mailto:support@cool-cloud-corp.com)."
                    },
                    "endpoints": {
                      "type": "array",
                      "description": "Lists all supported endpoints. Supported are all endpoints, which are implemented and do not return openEO error `FeatureUnsupported` / HTTP error code 501.",
                      "items": {
                        "title": "Endpoint",
                        "type": "object",
                        "required": [
                          "path",
                          "methods"
                        ],
                        "properties": {
                          "path": {
                            "description": "Path to the endpoint, relative to the URL of this endpoint. In general the paths MUST follow the paths specified in the openAPI specification as closely as possible. Therefore, paths MUST be prepended with a leading slash, but MUST NOT contain a trailing slash. Variables in the paths MUST be placed in curly braces and follow the parameter names in the openAPI specification, e.g. `{job_id}`.",
                            "type": "string"
                          },
                          "methods": {
                            "description": "Supported HTTP verbs in uppercase. It is not required to list OPTIONS as method (see the documentation regarding CORS).",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "GET",
                                "POST",
                                "PATCH",
                                "PUT",
                                "DELETE"
                              ]
                            }
                          }
                        }
                      },
                      "example": [
                        {
                          "path": "/collections",
                          "methods": [
                            "GET"
                          ]
                        },
                        {
                          "path": "/collections/{collection_id}",
                          "methods": [
                            "GET"
                          ]
                        },
                        {
                          "path": "/processes",
                          "methods": [
                            "GET"
                          ]
                        },
                        {
                          "path": "/jobs",
                          "methods": [
                            "GET",
                            "POST"
                          ]
                        },
                        {
                          "path": "/jobs/{job_id}",
                          "methods": [
                            "GET",
                            "DELETE",
                            "PATCH"
                          ]
                        }
                      ]
                    },
                    "billing": {
                      "title": "Billing",
                      "description": "Billing related data, e.g. the currency used or available plans to process jobs. MUST be specified if the back-end uses any billing related functionalities, e.g. budgeting, estimates.",
                      "type": "object",
                      "required": [
                        "currency"
                      ],
                      "properties": {
                        "currency": {
                          "description": "The currency the back-end is billing in. The currency MUST be either a valid currency code as defined in ISO-4217 or a proprietary currency, e.g. tiles or back-end specific credits.",
                          "type": "string",
                          "example": "USD"
                        },
                        "default_plan": {
                          "type": "string",
                          "description": "Name of the default plan to use when the user doesn't specify a plan. Is allowed to be *case insensitive* throughout the API.",
                          "example": "free"
                        },
                        "plans": {
                          "description": "Array of plans",
                          "type": "array",
                          "items": {
                            "title": "Billing Plan",
                            "type": "object",
                            "required": [
                              "name",
                              "description",
                              "paid"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the plan. Is allowed to be *case insensitive* throughout the API.",
                                "example": "free"
                              },
                              "description": {
                                "type": "string",
                                "description": "A description that gives a rough overview over the plan.\n\n[CommonMark 0.28](http://commonmark.org/) syntax MAY be used for rich text representation.",
                                "example": "Free plan for testing."
                              },
                              "paid": {
                                "type": "boolean",
                                "description": "Indicates whether the plan is a paid plan (`true`) or a free plan (`false`)."
                              },
                              "url": {
                                "type": "string",
                                "description": "URL to a web page with more details about the plan.",
                                "format": "url",
                                "example": "http://cool-cloud-corp.com/plans/free-plan"
                              }
                            }
                          },
                          "example": [
                            {
                              "name": "free",
                              "description": "Free plan. Calculates one tile per second and a maximum amount of 100 tiles per hour.",
                              "url": "http://cool-cloud-corp.com/plans/free-plan",
                              "paid": false
                            },
                            {
                              "name": "premium",
                              "description": "Premium plan. Calculates unlimited tiles and each calculated tile costs 0.003 USD.",
                              "url": "http://cool-cloud-corp.com/plans/premium-plan",
                              "paid": true
                            }
                          ]
                        }
                      }
                    },
                    "links": {
                      "description": "Additional links related to this service, e.g. the homepage of the service provider or the terms of service.\nIt is highly RECOMMENDED to provide a link back to the Well-Known URI (see `/.well-known/openeo`) with relation type `version-history` to allow clients to work on the most recent version.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/link"
                      },
                      "example": [
                        {
                          "href": "http://www.cool-cloud-corp.com",
                          "rel": "about",
                          "type": "text/html",
                          "title": "Homepage of the service provider"
                        },
                        {
                          "href": "https://www.cool-cloud-corp.com/tos",
                          "rel": "terms-of-service",
                          "type": "text/html",
                          "title": "Terms of service"
                        },
                        {
                          "href": "http://www.cool-cloud-corp.com/.well-known/openeo",
                          "rel": "version-history",
                          "type": "application/json",
                          "title": "List of supported openEO versions"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      }
    },
    "/.well-known/openeo": {
      "get": {
        "summary": "Supported openEO versions",
        "description": "Well-Known URI for openEO, listing all implemented openEO versions supported by the service provider.\nThis allows clients to easily identify the best suited openEO implementation they can use. The Well-Known URI is the entry point for clients and users, so make sure it is permanent and easy to use and remember. Please note that this URL MUST NOT be versioned as the other endpoints.\nSee [RFC 5785](https://tools.ietf.org/html/rfc5785) for more information about Well-Known URIs.",
        "tags": [
          "Capabilities"
        ],
        "security": [
          {}
        ],
        "servers": [
          {
            "url": "https://localhost",
            "description": "The Well-Known URI SHOULD be available directly at `https://{{domain}}/.well-known/openeo` in contrast to the other endpoints, which may be versioned and can run on other hosts, ports, ... etc."
          }
        ],
        "responses": {
          "200": {
            "description": "List of all available service instances, each with URL and the implemented openEO API version.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Well Known Discovery Response",
                  "type": "object",
                  "required": [
                    "versions"
                  ],
                  "properties": {
                    "versions": {
                      "type": "array",
                      "items": {
                        "title": "Service Instance",
                        "type": "object",
                        "required": [
                          "url",
                          "api_version"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "format": "url",
                            "description": "*Absolute* URLs to the service.",
                            "example": "https://example.com/api/v0.4"
                          },
                          "production": {
                            "type": "boolean",
                            "description": "Specifies whether the implementation is ready to be used in production use (`true`) or not (`false`).\nClients SHOULD only connect to non-production implementations if the user explicetly confirmed to use a non-production implementation.",
                            "default": true
                          },
                          "api_version": {
                            "type": "string",
                            "description": "Version number of the openEO specification this back-end implements.",
                            "example": "0.4.2"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "versions": [
                      {
                        "url": "https://www.openeo.org/api/v0.5",
                        "api_version": "0.5.1"
                      },
                      {
                        "url": "https://www.openeo.org/api/v1.0",
                        "api_version": "1.0.0"
                      },
                      {
                        "url": "https://www.openeo.org/api/v1.1",
                        "production": false,
                        "api_version": "1.1.0-beta"
                      }
                    ]
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      }
    },
    "/output_formats": {
      "get": {
        "summary": "Supported output formats",
        "description": "The request will ask the back-end for supported output formats, e.g. PNG, GTiff and JSON. The response is an object all available output formats and their options. This does not include the supported secondary web services.\n\n**Note**: Output format names and parameters MUST be fully aligned with the GDAL codes if available, see [GDAL Raster Formats](http://www.gdal.org/formats_list.html) and [OGR Vector Formats](http://www.gdal.org/ogr_formats.html). It is OPTIONAL to support all output format parameters supported by GDAL. Some file formats not available through GDAL may be defined centrally for openEO. Custom output formats or parameters MAY be defined.\n\nBack-ends are MUST NOT support aliases, for example it is not allowed to support `geotiff` instead of `gtiff`. Nevertheless, openEO Clients MAY translate user input input for convenience (e.g. translate `geotiff` to `gtiff`).\n\nOutput format names are allowed to be *case insensitive* throughout the API.",
        "tags": [
          "Capabilities",
          "Batch Job Management"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "An object with containing all output format names as keys and an object that defines supported paramaters.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Output Formats Response",
                  "type": "object",
                  "description": "List of supported output formats.",
                  "additionalProperties": {
                    "title": "Output Format",
                    "type": "object",
                    "description": "Describes a specific output format. The key of the entry is the output format name.",
                    "required": [
                      "gis_data_types"
                    ],
                    "properties": {
                      "gis_data_types": {
                        "type": "array",
                        "description": "Specifies the supported GIS spatial data type for this format.",
                        "items": {
                          "type": "string",
                          "enum": [
                            "raster",
                            "vector",
                            "table",
                            "other"
                          ]
                        }
                      },
                      "parameters": {
                        "title": "Output Format Parameters",
                        "description": "Specifies the supported parameters for this output format.",
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/argument"
                        }
                      },
                      "links": {
                        "description": "Additional links related to this output format, e.g. more information about the parameters.",
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/link"
                        }
                      }
                    }
                  },
                  "example": {
                    "GTiff": {
                      "gis_data_types": [
                        "raster"
                      ],
                      "parameters": {
                        "tiled": {
                          "type": "boolean",
                          "description": "This option can be used to force creation of tiled TIFF files [true]. By default [false] stripped TIFF files are created.",
                          "default": false
                        },
                        "compress": {
                          "type": "string",
                          "description": "Set the compression to use.",
                          "default": "none",
                          "enum": [
                            "JPEG",
                            "LZW",
                            "DEFLATE",
                            "NONE"
                          ]
                        },
                        "photometric": {
                          "type": "string",
                          "description": "Set the photometric interpretation tag.",
                          "enum": [
                            "MINISBLACK",
                            "MINISWHIT",
                            "RGB",
                            "CMYK",
                            "YCBCR",
                            "CIELAB",
                            "ICCLAB",
                            "ITULAB"
                          ],
                          "default": "RGB"
                        },
                        "jpeg_quality": {
                          "type": "integer",
                          "description": "Set the JPEG quality when using JPEG.",
                          "minimum": 1,
                          "maximum": 100,
                          "default": 75
                        }
                      },
                      "links": [
                        {
                          "href": "https://www.gdal.org/frmt_gtiff.html",
                          "rel": "about",
                          "title": "GDAL on the GeoTiff file format andstorage options"
                        }
                      ]
                    },
                    "GeoPackage": {
                      "gis_data_types": [
                        "raster",
                        "vector"
                      ],
                      "parameters": {
                        "version": {
                          "type": "string",
                          "description": "Set GeoPackage version. In AUTO mode, this will be equivalent to 1.2 starting with GDAL 2.3.",
                          "enum": [
                            "auto",
                            "1",
                            "1.1",
                            "1.2"
                          ],
                          "default": "auto"
                        },
                        "geometry_name": {
                          "type": "string",
                          "description": "**VECTOR ONLY.** Column to use for the geometry column.",
                          "default": "geom"
                        },
                        "table": {
                          "type": "string",
                          "description": "**RASTER ONLY.** Name of the table containing the tiles. If the GeoPackage dataset only contains one table, this option is not necessary. Otherwise, it is required."
                        }
                      },
                      "links": [
                        {
                          "href": "https://www.gdal.org/drv_geopackage_raster.html",
                          "rel": "about",
                          "title": "GDAL on GeoPackage for raster data"
                        },
                        {
                          "href": "https://www.gdal.org/drv_geopackage.html",
                          "rel": "about",
                          "title": "GDAL on GeoPackage for vector data"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      }
    },
    "/collections": {
      "get": {
        "summary": "Basic metadata for all datasets.",
        "description": "Lists available collections with basic information. To retrieve domain specific information (e.g. SAR) request all information for a specific collection using `GET /collections/{collection_id}`.\n\nThis endpoint is compatible with STAC 0.6.2 and all features and extensions of [STAC](https://github.com/radiantearth/stac-spec) can be used here.\n\n**Note:** openEO strives for compatibility with [STAC](https://github.com/radiantearth/stac-spec) and [OGC WFS 3](https://github.com/opengeospatial/WFS_FES) as far as possible. Both standards, as well as openEO, are still under development. Therefore, it is likely that further changes and adjustments will be made in the future.\n\nMore information on [data discovery](https://open-eo.github.io/openeo-api/v/0.4.2/collections/), including common relation types for links, are available in the documentation.",
        "tags": [
          "EO Data Discovery"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of collections (basic information only) and related links.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collections Response",
                  "type": "object",
                  "required": [
                    "collections",
                    "links"
                  ],
                  "properties": {
                    "collections": {
                      "type": "array",
                      "items": {
                        "title": "Simple STAC Collection",
                        "type": "object",
                        "required": [
                          "stac_version",
                          "id",
                          "description",
                          "license",
                          "extent",
                          "links"
                        ],
                        "properties": {
                          "stac_version": {
                            "$ref": "#/components/schemas/stac_version"
                          },
                          "id": {
                            "$ref": "#/components/schemas/collection_id"
                          },
                          "title": {
                            "$ref": "#/components/schemas/collection_title"
                          },
                          "description": {
                            "$ref": "#/components/schemas/collection_description"
                          },
                          "keywords": {
                            "$ref": "#/components/schemas/collection_keywords"
                          },
                          "version": {
                            "$ref": "#/components/schemas/collection_version"
                          },
                          "license": {
                            "$ref": "#/components/schemas/collection_license"
                          },
                          "providers": {
                            "$ref": "#/components/schemas/collection_providers"
                          },
                          "extent": {
                            "$ref": "#/components/schemas/collection_extent"
                          },
                          "links": {
                            "$ref": "#/components/schemas/collection_links"
                          }
                        }
                      }
                    },
                    "links": {
                      "description": "General links related to the data discovery service, for example  another service such as a OGC WCS that describes all the collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/link"
                      }
                    }
                  },
                  "example": {
                    "collections": [
                      {
                        "stac_version": "0.6.2",
                        "id": "Sentinel-2A",
                        "title": "Sentinel-2A MSI L1C",
                        "description": "Sentinel-2A is a wide-swath, high-resolution, multi-spectral imaging mission supporting Copernicus Land Monitoring studies, including the monitoring of vegetation, soil and water cover, as well as observation of inland waterways and coastal areas.",
                        "license": "proprietary",
                        "extent": {
                          "spatial": [
                            180,
                            -56,
                            -180,
                            83
                          ],
                          "temporal": [
                            "2015-06-23T00:00:00Z",
                            "2019-01-01T00:00:00Z"
                          ]
                        },
                        "keywords": [
                          "copernicus",
                          "esa",
                          "msi",
                          "sentinel"
                        ],
                        "providers": [
                          {
                            "name": "European Space Agency (ESA)",
                            "roles": [
                              "producer",
                              "licensor"
                            ],
                            "url": "https://sentinel.esa.int/web/sentinel/user-guides/sentinel-2-msi"
                          },
                          {
                            "name": "openEO",
                            "roles": [
                              "host"
                            ],
                            "url": "https://developers.google.com/earth-engine/datasets/catalog/COPERNICUS_S2"
                          }
                        ],
                        "links": [
                          {
                            "rel": "self",
                            "href": "https://openeo.org/api/collections/Sentinel-2A"
                          },
                          {
                            "rel": "license",
                            "href": "https://scihub.copernicus.eu/twiki/pub/SciHubWebPortal/TermsConditions/Sentinel_Data_Terms_and_Conditions.pdf"
                          }
                        ]
                      },
                      {
                        "stac_version": "0.6.2",
                        "id": "MOD09Q1",
                        "title": "MODIS/Terra Surface Reflectance 8-Day L3 Global 250m SIN Grid V006",
                        "description": "The MOD09Q1 Version 6 product provides an estimate of the surface spectral reflectance of Terra MODIS Bands 1-2 corrected for atmospheric conditions such as gasses, aerosols, and Rayleigh scattering. Provided along with the two 250 m MODIS bands is one additional layer, the Surface Reflectance QC 250 m band. For each pixel, a value is selected from all the acquisitions within the 8-day composite period. The criteria for the pixel choice include cloud and solar zenith. When several acquisitions meet the criteria the pixel with the minimum channel 3 (blue) value is used. Validation at stage 3 has been achieved for all MODIS Surface Reflectance products.",
                        "license": "proprietary",
                        "extent": {
                          "spatial": [
                            180,
                            -90,
                            -180,
                            90
                          ],
                          "temporal": [
                            "2000-02-01T00:00:00Z",
                            null
                          ]
                        },
                        "links": [
                          {
                            "rel": "self",
                            "href": "https://openeo.org/api/collections/MOD09Q1"
                          },
                          {
                            "rel": "license",
                            "href": "https://openeo.org/api/collections/MOD09Q1/license"
                          }
                        ]
                      }
                    ],
                    "links": [
                      {
                        "rel": "self",
                        "href": "https://openeo.org/api/collections"
                      },
                      {
                        "rel": "alternate",
                        "href": "https://openeo.org/csw",
                        "title": "openEO catalog (OGC Catalogue Services 3.0)"
                      }
                    ]
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      }
    },
    "/collections/{collection_id}": {
      "parameters": [
        {
          "name": "collection_id",
          "in": "path",
          "description": "Collection identifier",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/collection_id"
          }
        }
      ],
      "get": {
        "summary": "Full metadata for a specific dataset",
        "description": "Lists all information about a specific collection specified by the identifier `collection_id`.\n\nThis endpoint is compatible with STAC 0.6.2 and all features and extensions of [STAC](https://github.com/radiantearth/stac-spec) can be used here.\n\n**Note:** openEO strives for compatibility with [STAC](https://github.com/radiantearth/stac-spec) and [OGC WFS 3](https://github.com/opengeospatial/WFS_FES) as far as possible. Both standards, as well as openEO, are still under development. Therefore, it is likely that further changes and adjustments will be made in the future.\n\nMore information on [data discovery](https://open-eo.github.io/openeo-api/v/0.4.2/collections/), including common relation types for links, are available in the documentation.",
        "tags": [
          "EO Data Discovery"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "JSON object with metadata about the collection.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "STAC Collection",
                  "type": "object",
                  "required": [
                    "stac_version",
                    "id",
                    "description",
                    "license",
                    "extent",
                    "links",
                    "properties",
                    "other_properties"
                  ],
                  "properties": {
                    "stac_version": {
                      "$ref": "#/components/schemas/stac_version"
                    },
                    "id": {
                      "$ref": "#/components/schemas/collection_id"
                    },
                    "title": {
                      "$ref": "#/components/schemas/collection_title"
                    },
                    "description": {
                      "$ref": "#/components/schemas/collection_description"
                    },
                    "keywords": {
                      "$ref": "#/components/schemas/collection_keywords"
                    },
                    "version": {
                      "$ref": "#/components/schemas/collection_version"
                    },
                    "license": {
                      "$ref": "#/components/schemas/collection_license"
                    },
                    "providers": {
                      "$ref": "#/components/schemas/collection_providers"
                    },
                    "extent": {
                      "$ref": "#/components/schemas/collection_extent"
                    },
                    "links": {
                      "$ref": "#/components/schemas/collection_links"
                    },
                    "other_properties": {
                      "title": "STAC Varying Collection Properties",
                      "description": "A list of all metadata properties, which don't have common values across the whole collection. Therefore it allows to specify a summary of the values as extent or set of values.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "extent": {
                            "title": "STAC Varying Collection Property Extent",
                            "description": "If the dimension consists of [ordinal](https://en.wikipedia.org/wiki/Level_of_measurement#Ordinal_scale) values, the extent (lower and upper bounds) of the values as two-dimensional array. Strings are only allowed for temporal extents, which are formatted according to [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6). Use `null` for open intervals.",
                            "type": "array",
                            "minItems": 2,
                            "maxItems": 2,
                            "items": {
                              "nullable": true,
                              "anyOf": [
                                {
                                  "type": "number",
                                  "nullable": true
                                },
                                {
                                  "type": "string",
                                  "format": "date-time"
                                }
                              ]
                            }
                          },
                          "values": {
                            "title": "STAC Varying Collection Property Values",
                            "description": "If the property consists of [nominal](https://en.wikipedia.org/wiki/Level_of_measurement#Nominal_level), a set of all potential values can be specified. Only primitive data types allowed.",
                            "type": "array",
                            "items": {
                              "nullable": true,
                              "anyOf": [
                                {
                                  "type": "number",
                                  "nullable": true
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                {
                                  "type": "boolean"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "properties": {
                      "title": "STAC Collection Properties",
                      "description": "A list of all metadata properties, which are common across the whole collection.",
                      "type": "object",
                      "required": [
                        "cube:dimensions"
                      ],
                      "properties": {
                        "cube:dimensions": {
                          "title": "STAC Collection Cube Dimensions",
                          "description": "Uniquely named dimensions of the data cube.",
                          "type": "object",
                          "additionalProperties": {
                            "anyOf": [
                              {
                                "title": "Additional Dimension Object",
                                "description": "An additional dimension that is not `spatial`.",
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "anyOf": [
                                  {
                                    "title": "Additional Dimension with Extent",
                                    "required": [
                                      "extent"
                                    ]
                                  },
                                  {
                                    "title": "Additional Dimension with Values",
                                    "required": [
                                      "values"
                                    ]
                                  }
                                ],
                                "not": {
                                  "required": [
                                    "axis"
                                  ]
                                },
                                "properties": {
                                  "type": {
                                    "description": "Custom type of the dimension, never `spatial`.",
                                    "allOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "not": {
                                          "type": "string",
                                          "enum": [
                                            "spatial"
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "extent": {
                                    "$ref": "#/components/schemas/collection_dimension_extent_open"
                                  },
                                  "values": {
                                    "$ref": "#/components/schemas/collection_dimension_values"
                                  },
                                  "step": {
                                    "$ref": "#/components/schemas/collection_dimension_step"
                                  },
                                  "unit": {
                                    "$ref": "#/components/schemas/collection_dimension_unit"
                                  },
                                  "reference_system": {
                                    "description": "The reference system for the data.",
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "title": "Horizontal Spatial Dimension Object",
                                "description": "A spatial dimension in one of the horizontal (x or y) directions.",
                                "type": "object",
                                "required": [
                                  "type",
                                  "axis",
                                  "extent"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/collection_dimension_type_spatial"
                                  },
                                  "axis": {
                                    "description": "Axis of the spatial dimension (`x`, `y`).",
                                    "type": "string",
                                    "enum": [
                                      "x",
                                      "y"
                                    ]
                                  },
                                  "extent": {
                                    "description": "Extent (lower and upper bounds) of the dimension as two-dimensional array. Open intervals with `null` are not allowed.",
                                    "type": "array",
                                    "minItems": 2,
                                    "maxItems": 2,
                                    "items": {
                                      "type": "number"
                                    }
                                  },
                                  "values": {
                                    "description": "Optionally, a set of all potential values.",
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                      "type": "number"
                                    }
                                  },
                                  "step": {
                                    "$ref": "#/components/schemas/collection_dimension_step"
                                  },
                                  "reference_system": {
                                    "$ref": "#/components/schemas/collection_dimension_reference_system_spatial"
                                  }
                                }
                              },
                              {
                                "title": "Vertical Spatial Dimension Object",
                                "description": "A spatial dimension in vertical (z) direction.",
                                "type": "object",
                                "required": [
                                  "type",
                                  "axis"
                                ],
                                "anyOf": [
                                  {
                                    "title": "Vertical Spatial Dimension with Extent",
                                    "required": [
                                      "extent"
                                    ]
                                  },
                                  {
                                    "title": "Vertical Spatial Dimension with Values",
                                    "required": [
                                      "values"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/collection_dimension_type_spatial"
                                  },
                                  "axis": {
                                    "description": "Axis of the spatial dimension, always `z`.",
                                    "type": "string",
                                    "enum": [
                                      "z"
                                    ]
                                  },
                                  "extent": {
                                    "$ref": "#/components/schemas/collection_dimension_extent_open"
                                  },
                                  "values": {
                                    "$ref": "#/components/schemas/collection_dimension_values"
                                  },
                                  "step": {
                                    "$ref": "#/components/schemas/collection_dimension_step"
                                  },
                                  "unit": {
                                    "$ref": "#/components/schemas/collection_dimension_unit"
                                  },
                                  "reference_system": {
                                    "$ref": "#/components/schemas/collection_dimension_reference_system_spatial"
                                  }
                                }
                              },
                              {
                                "title": "Temporal Dimension Object",
                                "description": "A temporal dimension based on the ISO 8601 standard. The temporal reference system for the data is expected to be ISO 8601 compliant (Gregorian calendar / UTC). Data not compliant with ISO 8601 can be represented as an *Additional Dimension Object* with `type` set to `temporal`.",
                                "type": "object",
                                "required": [
                                  "type",
                                  "extent"
                                ],
                                "not": {
                                  "required": [
                                    "axis"
                                  ]
                                },
                                "properties": {
                                  "type": {
                                    "description": "Type of the dimension, always `temporal`.",
                                    "type": "string",
                                    "enum": [
                                      "temporal"
                                    ]
                                  },
                                  "values": {
                                    "description": "If the dimension consists of set of specific values they can be listed here. The dates and/or times must be strings compliant to [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "extent": {
                                    "description": "Extent (lower and upper bounds) of the dimension as two-dimensional array. The dates and/or times must be strings compliant to [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601). `null` is allowed for open date ranges.",
                                    "type": "array",
                                    "minItems": 2,
                                    "maxItems": 2,
                                    "items": {
                                      "type": "string",
                                      "nullable": true
                                    }
                                  },
                                  "step": {
                                    "description": "The space between the temporal instances as [ISO 8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations), e.g. `P1D`. Use `null` for irregularly spaced steps.",
                                    "type": "string",
                                    "nullable": true
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "anyOf": [
                        {
                          "title": "STAC Other Extensions",
                          "description": "Any other extension from STAC or even custom extensions can be used to describe the collection better.",
                          "type": "object",
                          "additionalProperties": true
                        },
                        {
                          "$ref": "#/components/schemas/collection_eo"
                        },
                        {
                          "$ref": "#/components/schemas/collection_sar"
                        },
                        {
                          "$ref": "#/components/schemas/collection_sci"
                        }
                      ]
                    }
                  },
                  "example": {
                    "stac_version": "0.6.2",
                    "id": "Sentinel-2",
                    "title": "Sentinel-2 MSI L2A",
                    "description": "Sentinel-2A is a wide-swath, high-resolution, multi-spectral imaging mission supporting Copernicus Land Monitoring studies.",
                    "license": "proprietary",
                    "keywords": [
                      "copernicus",
                      "esa",
                      "msi",
                      "sentinel"
                    ],
                    "providers": [
                      {
                        "name": "European Space Agency (ESA)",
                        "roles": [
                          "producer",
                          "licensor"
                        ],
                        "url": "https://sentinel.esa.int/web/sentinel/user-guides/sentinel-2-msi"
                      },
                      {
                        "name": "openEO",
                        "roles": [
                          "host"
                        ],
                        "url": "https://developers.google.com/earth-engine/datasets/catalog/COPERNICUS_S2"
                      }
                    ],
                    "extent": {
                      "spatial": [
                        180,
                        -56,
                        -180,
                        83
                      ],
                      "temporal": [
                        "2015-06-23T00:00:00Z",
                        null
                      ]
                    },
                    "links": [
                      {
                        "rel": "self",
                        "href": "https://openeo.org/api/collections/Sentinel-2A"
                      },
                      {
                        "rel": "license",
                        "href": "https://scihub.copernicus.eu/twiki/pub/SciHubWebPortal/TermsConditions/Sentinel_Data_Terms_and_Conditions.pdf"
                      },
                      {
                        "rel": "about",
                        "href": "https://earth.esa.int/web/sentinel/user-guides/sentinel-2-msi/product-types/level-1c",
                        "title": "ESA Sentinel-2 MSI Level-1C User Guide"
                      }
                    ],
                    "properties": {
                      "cube:dimensions": {
                        "x": {
                          "type": "spatial",
                          "axis": "x",
                          "extent": [
                            -180,
                            180
                          ],
                          "reference_system": 32632
                        },
                        "y": {
                          "type": "spatial",
                          "axis": "y",
                          "extent": [
                            -56,
                            83
                          ],
                          "reference_system": 32632
                        },
                        "temporal": {
                          "type": "temporal",
                          "extent": [
                            "2015-06-23T00:00:00Z",
                            null
                          ],
                          "step": null
                        },
                        "spectral": {
                          "type": "bands",
                          "values": [
                            "B1",
                            "B2",
                            "B3",
                            "B4",
                            "B5",
                            "B6",
                            "B7",
                            "B8",
                            "B8A",
                            "B9",
                            "B10",
                            "B11",
                            "B12"
                          ]
                        }
                      },
                      "sci:citation": "Copernicus Sentinel data [Year]",
                      "eo:epsg": 32632,
                      "eo:constellation": "Sentinel-2",
                      "eo:instrument": "MSI",
                      "eo:bands": [
                        {
                          "name": "B1",
                          "common_name": "coastal",
                          "center_wavelength": 4.439,
                          "gsd": 60
                        },
                        {
                          "name": "B2",
                          "common_name": "blue",
                          "center_wavelength": 4.966,
                          "gsd": 10
                        },
                        {
                          "name": "B3",
                          "common_name": "green",
                          "center_wavelength": 5.6,
                          "gsd": 10
                        },
                        {
                          "name": "B4",
                          "common_name": "red",
                          "center_wavelength": 6.645,
                          "gsd": 10
                        },
                        {
                          "name": "B5",
                          "center_wavelength": 7.039,
                          "gsd": 20
                        },
                        {
                          "name": "B6",
                          "center_wavelength": 7.402,
                          "gsd": 20
                        },
                        {
                          "name": "B7",
                          "center_wavelength": 7.825,
                          "gsd": 20
                        },
                        {
                          "name": "B8",
                          "common_name": "nir",
                          "center_wavelength": 8.351,
                          "gsd": 10
                        },
                        {
                          "name": "B8A",
                          "center_wavelength": 8.648,
                          "gsd": 20
                        },
                        {
                          "name": "B9",
                          "center_wavelength": 9.45,
                          "gsd": 60
                        },
                        {
                          "name": "B10",
                          "center_wavelength": 1.3735,
                          "gsd": 60
                        },
                        {
                          "name": "B11",
                          "common_name": "swir16",
                          "center_wavelength": 1.6137,
                          "gsd": 20
                        },
                        {
                          "name": "B12",
                          "common_name": "swir22",
                          "center_wavelength": 2.2024,
                          "gsd": 20
                        }
                      ]
                    },
                    "other_properties": {
                      "eo:platform": {
                        "values": [
                          "Sentinel-2A",
                          "Sentinel-2B"
                        ]
                      },
                      "eo:epsg": {
                        "values": [
                          32601,
                          32602,
                          32603,
                          32604,
                          32605,
                          32606,
                          32607,
                          32608,
                          32609,
                          32610,
                          32611,
                          32612,
                          32613,
                          32614,
                          32615,
                          32616,
                          32617,
                          32618,
                          32619,
                          32620,
                          32621,
                          32622,
                          32623,
                          32624,
                          32625,
                          32626,
                          32627,
                          32628,
                          32629,
                          32630,
                          32631,
                          32632,
                          32633,
                          32634,
                          32635,
                          32636,
                          32637,
                          32638,
                          32639,
                          32640,
                          32641,
                          32642,
                          32643,
                          32644,
                          32645,
                          32646,
                          32647,
                          32648,
                          32649,
                          32650,
                          32651,
                          32652,
                          32653,
                          32654,
                          32655,
                          32656,
                          32657,
                          32658,
                          32659,
                          32660
                        ]
                      },
                      "eo:cloud_cover": {
                        "extent": [
                          0,
                          100
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      }
    },
    "/processes": {
      "get": {
        "summary": "Supported processes",
        "description": "The request asks the back-end for available processes and returns detailed process descriptions, including parameters and return values. Processes are described using the Functio specification for language-agnostic process descriptions.",
        "tags": [
          "Process Discovery"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Formal specification describing the supported processes.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Processes Response",
                  "type": "object",
                  "required": [
                    "processes",
                    "links"
                  ],
                  "properties": {
                    "processes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/process"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/list_links"
                    }
                  },
                  "example": {
                    "processes": [
                      {
                        "id": "round",
                        "summary": "Rounds to a specified precision",
                        "description": "Rounds a real number `x` to specified precision `p`.\n\nIf the fractional part of `x` is halfway between two integers, one of which is even and the other odd, then the even number is returned.\nThis behavior follows [IEEE Standard 754](https://ieeexplore.ieee.org/document/4610935). This kind of rounding is also called \"rounding to nearest\" or \"banker's rounding\". It minimizes rounding errors that result from consistently rounding a midpoint value in a single direction.\n\nThe nodata value `null` is passed through and therefore gets propagated.",
                        "categories": [
                          "math"
                        ],
                        "parameter_order": [
                          "x",
                          "p"
                        ],
                        "parameters": {
                          "x": {
                            "description": "A number to round.",
                            "schema": {
                              "type": [
                                "number",
                                "null"
                              ]
                            },
                            "required": true
                          },
                          "p": {
                            "description": "A positive number specifies the number of digits after the decimal point to round to. A negative number means rounding to a power of ten, so for example *-2* rounds to the nearest hundred. Defaults to *0*.",
                            "schema": {
                              "type": "integer",
                              "default": 0
                            }
                          }
                        },
                        "returns": {
                          "description": "The rounded number.",
                          "schema": {
                            "type": [
                              "number",
                              "null"
                            ]
                          }
                        },
                        "examples": [
                          {
                            "arguments": {
                              "x": 0
                            },
                            "returns": 0
                          },
                          {
                            "arguments": {
                              "x": 3.56,
                              "p": 1
                            },
                            "returns": 3.6
                          },
                          {
                            "arguments": {
                              "x": -0.4444444,
                              "p": 2
                            },
                            "returns": -0.44
                          },
                          {
                            "arguments": {
                              "x": -2.5
                            },
                            "returns": -2
                          },
                          {
                            "arguments": {
                              "x": -3.5
                            },
                            "returns": -4
                          },
                          {
                            "arguments": {
                              "x": 1234.5,
                              "p": -2
                            },
                            "returns": 1200
                          }
                        ],
                        "links": [
                          {
                            "rel": "about",
                            "href": "http://mathworld.wolfram.com/AbsoluteValue.html",
                            "title": "Absolute value explained by Wolfram MathWorld"
                          },
                          {
                            "rel": "about",
                            "href": "https://ieeexplore.ieee.org/document/4610935",
                            "title": "IEEE Standard 754-2008 for Floating-Point Arithmetic"
                          }
                        ]
                      },
                      {
                        "id": "e",
                        "summary": "Euler's number (e)",
                        "description": "The real number *e* is a mathematical constant that is the base of the natural logarithm such that *ln(e) = 1*. The numerical value is approximately *2.71828*.",
                        "categories": [
                          "math > constants"
                        ],
                        "parameters": {},
                        "returns": {
                          "description": "Returns the numerical value of Euler's number. Precision may be limited by the processing software.",
                          "schema": {
                            "type": "number"
                          }
                        },
                        "examples": [
                          {
                            "title": "Test for ln(e) = 1",
                            "process_graph": {
                              "e1": {
                                "process_id": "e",
                                "arguments": {}
                              },
                              "ln1": {
                                "process_id": "ln",
                                "arguments": {
                                  "data": {
                                    "from_node": "e1"
                                  }
                                },
                                "result": true
                              }
                            },
                            "returns": 1
                          }
                        ],
                        "links": [
                          {
                            "rel": "about",
                            "href": "http://mathworld.wolfram.com/e.html",
                            "title": "Mathematical constant e on Wolfram MathWorld"
                          }
                        ]
                      }
                    ],
                    "links": [
                      {
                        "rel": "alternate",
                        "href": "https://provider.com/processes",
                        "type": "text/html",
                        "title": "HTML version of the processes"
                      }
                    ]
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      }
    },
    "/udf_runtimes": {
      "get": {
        "summary": "Supported UDF runtimes",
        "description": "Returns a list of supported runtimes for user-defined functions (UDFs), which includes either the programming languages including version numbers and available libraries including version numbers or docker containers.",
        "tags": [
          "Capabilities"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Description of UDF runtime support",
            "content": {
              "application/json": {
                "schema": {
                  "title": "UDF Runtimes Response",
                  "type": "object",
                  "description": "List of available runtime environments. Each runtime environment has a unique name, which is used as the property key. The name is used in processes to select the runtime environment for UDFs, so the names should be stable and meaningful (see example). Runtime environments can be either a programming language environment or Docker-based.",
                  "additionalProperties": {
                    "oneOf": [
                      {
                        "title": "Programming language",
                        "type": "object",
                        "required": [
                          "default",
                          "versions"
                        ],
                        "properties": {
                          "description": {
                            "$ref": "#/components/schemas/description"
                          },
                          "default": {
                            "description": "The default version.",
                            "type": "string"
                          },
                          "versions": {
                            "title": "Programming language versions",
                            "description": "Versions available for the programming language.",
                            "type": "object",
                            "additionalProperties": {
                              "title": "Programming language version",
                              "type": "object",
                              "required": [
                                "libraries"
                              ],
                              "properties": {
                                "libraries": {
                                  "description": "List of installed libraries/modules/packages/extensions for the programming language. The names of the extension are used as the property keys.",
                                  "additionalProperties": {
                                    "title": "Programming language library",
                                    "type": "object",
                                    "required": [
                                      "version"
                                    ],
                                    "properties": {
                                      "version": {
                                        "type": "string",
                                        "description": "Version number of the library."
                                      },
                                      "links": {
                                        "type": "array",
                                        "description": "Related links, e.g. additional external documentation for this library.",
                                        "items": {
                                          "$ref": "#/components/schemas/link"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/udf_links"
                          }
                        }
                      },
                      {
                        "title": "Docker container",
                        "type": "object",
                        "required": [
                          "docker",
                          "default",
                          "tags"
                        ],
                        "properties": {
                          "description": {
                            "$ref": "#/components/schemas/description"
                          },
                          "docker": {
                            "type": "string",
                            "description": "Identifier of a Docker image on Docker Hub or a private repository, i.e. the docker image name."
                          },
                          "default": {
                            "description": "The default tag.",
                            "type": "string"
                          },
                          "tags": {
                            "type": "array",
                            "description": "The docker tags that are supported.",
                            "minItems": 1,
                            "items": {
                              "type": "string"
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/udf_links"
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "PHP7": {
                      "description": "Just an example how to reference a docker image.",
                      "docker": "openeo/udf-php7",
                      "default": "latest",
                      "tags": [
                        "latest",
                        "7.3.1",
                        "7.3",
                        "7.2"
                      ],
                      "links": [
                        {
                          "href": "https://hub.docker.com/openeo/udf-php7/"
                        }
                      ]
                    },
                    "R": {
                      "description": "R programming language with Rcpp and rmarkdown.",
                      "default": "3.5.2",
                      "versions": {
                        "3.1.0": {
                          "libraries": {
                            "Rcpp": {
                              "version": "1.0.10",
                              "links": [
                                {
                                  "href": "https://cran.r-project.org/web/packages/Rcpp/index.html"
                                }
                              ]
                            },
                            "rmarkdown": {
                              "version": "1.7.0",
                              "links": [
                                {
                                  "href": "https://cran.r-project.org/web/packages/rmarkdown/index.html"
                                }
                              ]
                            }
                          }
                        },
                        "3.5.2": {
                          "libraries": {
                            "Rcpp": {
                              "version": "1.2.0",
                              "links": [
                                {
                                  "href": "https://cran.r-project.org/web/packages/Rcpp/index.html"
                                }
                              ]
                            },
                            "rmarkdown": {
                              "version": "1.7.0",
                              "links": [
                                {
                                  "href": "https://cran.r-project.org/web/packages/rmarkdown/index.html"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      }
    },
    "/credentials/oidc": {
      "get": {
        "summary": "OpenID Connect authentication",
        "description": "This endpoint redirects to the [OpenID Connect discovery](http://openid.net/specs/openid-connect-discovery-1_0.html) document, which is usually located at `https://{{domain}}/.well-known/openid-configuration` and provides all information required to authenticate using [OpenID Connect](http://openid.net/connect/). It is highly RECOMMENDED to implement OpenID Connect for public services in favor of Basic authentication.",
        "tags": [
          "Account Management"
        ],
        "security": [
          {}
        ],
        "responses": {
          "303": {
            "description": "Specifies the location of the OpenID Connect discovery document.",
            "headers": {
              "Location": {
                "required": true,
                "schema": {
                  "type": "string",
                  "example": "https://openeo.org/.well-known/openid-configuration"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      }
    },
    "/credentials/basic": {
      "get": {
        "summary": "HTTP Basic authentication",
        "description": "This request checks whether the credentials provided in the HTTP Basic header are valid. Returns the user ID and a bearer token for authorization in subsequent API calls. It is RECOMMENDED to implement this authentication method for non-public services only.",
        "tags": [
          "Account Management"
        ],
        "security": [
          {
            "Basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "Credentials are correct and authentication succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HTTP Basic Authentication Response",
                  "type": "object",
                  "required": [
                    "user_id",
                    "access_token"
                  ],
                  "properties": {
                    "user_id": {
                      "$ref": "#/components/schemas/user_id"
                    },
                    "access_token": {
                      "description": "An access token that is used for subsequent calls to the API as Bearer token in the `Authorization` header.",
                      "type": "string",
                      "example": "b34ba2bdf9ac9ee1"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      }
    },
    "/validation": {
      "post": {
        "summary": "Validate a process graph",
        "description": "Validates a process graph without executing it. A process graph is considered valid unless the `errors` array in the response contains at least one error.\n\nChecks whether the process graph is schematically correct and the processes are supported by the back-end. It MUST also checks the parameter values against the schema, but checking whether the values are adequate in the context of data is OPTIONAL. For example, a non-existing band name may may get rejected only by a few back-ends.\n\nErrors that usually occure during processing MAY NOT get reported, e.g. if a referenced file is accessible at the time of execution.\n\nBack-ends can either report all errors at once or stop the validation once they found the first error. \n\nPlease note that a validation always returns with HTTP status code 200. Error codes in the 4xx and 5xx ranges MUST be returned only when the general validation request is invalid (e.g. server is busy or no process graph parameter specified), but never if the process graph validation found an error (e.g. an unsupported process).",
        "tags": [
          "Process Graph Management"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the validation result as a list of errors. An empty list indicates a successful validation.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Validation Response",
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "description": "A list of validation errors.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/error"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Validation Request",
                "type": "object",
                "required": [
                  "process_graph"
                ],
                "properties": {
                  "process_graph": {
                    "$ref": "#/components/schemas/process_graph"
                  }
                }
              }
            }
          },
          "description": "Specifies the process graph to be validated."
        }
      }
    },
    "/result": {
      "post": {
        "summary": "Process and download data synchronously",
        "description": "Process graphs will be executed directly and the result will be downloaded in the format specified in the process graph. To specify the format use a process such as `save_result`. Requests might time-out after a certain amount of time by sending openEO error `RequestTimeout`. A header named `OpenEO-Costs` MAY be sent with all responses, which MUST include the costs for processing and downloading the data. This endpoint can be used to generate small previews or test process graphs before starting a batch job.",
        "tags": [
          "Process Graph Management",
          "Batch Job Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Result data in the requested output format",
            "headers": {
              "Content-Type": {
                "description": "The appropriate media (MIME) type for the requested output format MUST be sent.",
                "schema": {
                  "type": "string"
                }
              },
              "OpenEO-Costs": {
                "description": "MAY include the costs for processing and downloading the data.",
                "schema": {
                  "$ref": "#/components/schemas/money"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        },
        "requestBody": {
          "description": "Specifies the job details, e.g. the process graph and billing details.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "Synchronous Result Request",
                "type": "object",
                "required": [
                  "process_graph"
                ],
                "properties": {
                  "process_graph": {
                    "$ref": "#/components/schemas/process_graph"
                  },
                  "budget": {
                    "$ref": "#/components/schemas/budget"
                  },
                  "plan": {
                    "$ref": "#/components/schemas/billing_plan_defaultable"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/process_graphs": {
      "get": {
        "summary": "List all stored process graphs",
        "description": "This service lists all process graphs of the authenticated user that are stored at the back-end.",
        "tags": [
          "Process Graph Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "JSON array with stored process graph meta data",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stored Process Graph List Response",
                  "type": "object",
                  "required": [
                    "process_graphs",
                    "links"
                  ],
                  "properties": {
                    "process_graphs": {
                      "description": "Array of stored process graphs",
                      "type": "array",
                      "items": {
                        "title": "Stored Process Graph Metadata",
                        "description": "Defines limited metadata of stored process graphs that have been submitted by users.",
                        "type": "object",
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "$ref": "#/components/schemas/process_graph_id"
                          },
                          "title": {
                            "$ref": "#/components/schemas/title"
                          },
                          "description": {
                            "$ref": "#/components/schemas/description"
                          }
                        }
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/list_links"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      },
      "post": {
        "summary": "Store a process graph",
        "description": "Creates a unique resource for a provided process graph that can be reused in other process graphs.",
        "tags": [
          "Process Graph Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/created"
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Store Process Graph Request",
                "type": "object",
                "required": [
                  "process_graph"
                ],
                "properties": {
                  "title": {
                    "$ref": "#/components/schemas/title"
                  },
                  "description": {
                    "$ref": "#/components/schemas/description"
                  },
                  "process_graph": {
                    "$ref": "#/components/schemas/process_graph"
                  }
                }
              }
            }
          },
          "description": "Specifies the process graph with its meta data."
        }
      }
    },
    "/process_graphs/{process_graph_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/process_graph_id"
        }
      ],
      "get": {
        "summary": "Full metadata for a stored process graph",
        "description": "Returns all information about a process graph.",
        "tags": [
          "Process Graph Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "JSON object with process graph",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stored Process Graph Response",
                  "description": "Defines full metadata of stored process graphs that have been submitted by users.",
                  "type": "object",
                  "required": [
                    "id",
                    "process_graph"
                  ],
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/process_graph_id"
                    },
                    "title": {
                      "$ref": "#/components/schemas/title"
                    },
                    "description": {
                      "$ref": "#/components/schemas/description"
                    },
                    "process_graph": {
                      "$ref": "#/components/schemas/process_graph"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      },
      "patch": {
        "summary": "Modify a stored process graph",
        "description": "Replaces a process graph or modifies the title, but maintains the identifier.",
        "tags": [
          "Process Graph Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "The process graph data has been updated successfully."
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Update Stored Process Graph Request",
                "type": "object",
                "properties": {
                  "title": {
                    "$ref": "#/components/schemas/title"
                  },
                  "description": {
                    "$ref": "#/components/schemas/description"
                  },
                  "process_graph": {
                    "$ref": "#/components/schemas/process_graph"
                  }
                }
              }
            }
          },
          "description": "Specifies the process graph with a title."
        }
      },
      "delete": {
        "summary": "Delete a stored process graph",
        "tags": [
          "Process Graph Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "The process graph has been successfully deleted"
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      }
    },
    "/service_types": {
      "get": {
        "summary": "Supported secondary web service protocols",
        "description": "The request will ask the back-end for supported secondary web service protocols, e.g. WMS or WCS. The response is an object of all available secondary web service protocols, including their parameters, attributes and process graph variables.\nParameters configure the service and therefore need to be defined upon creation of a service. Attributes are read-only characteristics of the service and may be computed based on the parameters, e.g. available layers for a WMS based on the bands in the underlying GeoTiff.\nA list of process graph variables is also available. This variables can be used by users in a process graph that is used to compute web service results. The objects can directly be used inside the process graph. Such variables are usually things that have to be injected into the process graph from the context of the web service. For example, a map service such as a WMS would need to inject the spatial extent into the process graph so that the back-end can compute the corresponding tile correctly.\nTo improve interoperability between back-ends common names for the services SHOULD be used, e.g. the abbreviations used in the official [OGC Schema Repository](http://schemas.opengis.net/) for the respective services.\nService names are allowed to be *case insensitive* throughout the API.",
        "tags": [
          "Capabilities",
          "Secondary Services Management"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "An object with a map containing all service names as keys and an object that defines supported paramaters and attributes.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Service Types Response",
                  "type": "object",
                  "description": "List of supported secondary web services.",
                  "additionalProperties": {
                    "title": "Service Type",
                    "type": "object",
                    "properties": {
                      "parameters": {
                        "title": "Service Type Parameters",
                        "description": "List of supported parameters for configuration.",
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/argument"
                        }
                      },
                      "attributes": {
                        "title": "Service Type Attributes",
                        "description": "List of supported attributes.",
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/argument"
                        }
                      },
                      "variables": {
                        "title": "Service Type Variables",
                        "description": "List of supported process graph variables.",
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/variable"
                        }
                      },
                      "links": {
                        "description": "Additional links related to this service type, e.g. more information about the parameters, attributes or options to access the created services.",
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/link"
                        }
                      }
                    }
                  },
                  "example": {
                    "WMS": {
                      "parameters": {
                        "version": {
                          "type": "string",
                          "description": "The WMS version to use.",
                          "default": "1.3.0",
                          "enum": [
                            "1.1.1",
                            "1.3.0"
                          ]
                        }
                      },
                      "attributes": {
                        "layers": {
                          "type": "array",
                          "description": "Array of layer names.",
                          "example": [
                            "roads",
                            "countries",
                            "water_bodies"
                          ]
                        }
                      },
                      "variables": [
                        {
                          "variable_id": "layer",
                          "type": "string",
                          "desctiption": "The layer name.",
                          "default": "roads"
                        },
                        {
                          "variable_id": "spetial_extent_west",
                          "type": "number"
                        },
                        {
                          "variable_id": "spetial_extent_east",
                          "type": "number"
                        },
                        {
                          "variable_id": "spetial_extent_north",
                          "type": "number"
                        },
                        {
                          "variable_id": "spetial_extent_south",
                          "type": "number"
                        }
                      ],
                      "links": [
                        {
                          "href": "https://www.opengeospatial.org/standards/wms",
                          "rel": "about",
                          "title": "OGC Web Map Service Standard"
                        }
                      ]
                    },
                    "WFS": {
                      "parameters": {
                        "version": {
                          "type": "string",
                          "description": "The WFS version to use.",
                          "default": "2.0.0",
                          "enum": [
                            "1.0.0",
                            "1.1.0",
                            "2.0.0"
                          ]
                        },
                        "maxFeatures": {
                          "type": "integer",
                          "description": "Maximum number of features (since WFS 2.0.0 only).",
                          "default": 10000,
                          "minimum": 1,
                          "maximum": 100000
                        }
                      },
                      "attributes": {
                        "typeNames": {
                          "type": "array",
                          "description": "Array of available feature type names.",
                          "example": [
                            "topp:states",
                            "topp:cities"
                          ]
                        }
                      },
                      "links": [
                        {
                          "href": "https://www.opengeospatial.org/standards/wfs",
                          "rel": "about",
                          "title": "OGC Web Feature Service Standard"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      }
    },
    "/services": {
      "get": {
        "summary": "List all web services",
        "description": "Requests to this endpoint will list all running secondary web services submitted by a user with given id.",
        "tags": [
          "Secondary Services Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of service descriptions",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Secondary Web Services List Response",
                  "type": "object",
                  "required": [
                    "services",
                    "links"
                  ],
                  "properties": {
                    "services": {
                      "type": "array",
                      "items": {
                        "title": "Secondary Web Service Metadata",
                        "description": "Defines metadata of services.",
                        "type": "object",
                        "required": [
                          "id",
                          "enabled",
                          "type",
                          "url"
                        ],
                        "properties": {
                          "id": {
                            "$ref": "#/components/schemas/service_id"
                          },
                          "title": {
                            "$ref": "#/components/schemas/title"
                          },
                          "description": {
                            "$ref": "#/components/schemas/description"
                          },
                          "url": {
                            "$ref": "#/components/schemas/service_url"
                          },
                          "type": {
                            "$ref": "#/components/schemas/service_type"
                          },
                          "enabled": {
                            "$ref": "#/components/schemas/service_enabled"
                          },
                          "submitted": {
                            "$ref": "#/components/schemas/submitted"
                          },
                          "plan": {
                            "$ref": "#/components/schemas/billing_plan"
                          },
                          "costs": {
                            "$ref": "#/components/schemas/money"
                          },
                          "budget": {
                            "$ref": "#/components/schemas/budget"
                          }
                        }
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/list_links"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      },
      "post": {
        "summary": "Publish a new service",
        "description": "Calling this endpoint will create a secondary web service such as WMTS, TMS or WCS. The underlying data is processes on-demand, but a process graph may simply access results from a batch job. Computations should be performed in the sense that it is only evaluated for the requested spatial / temporal extent and resolution.\n\n**Note:** Costs incurred by shared secondary web services are usually paid by the owner, but this depends on the service type and whether it supports charging fees or not.",
        "tags": [
          "Secondary Services Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/created"
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Store Secondary Web Service Request",
                "type": "object",
                "required": [
                  "type",
                  "process_graph"
                ],
                "properties": {
                  "title": {
                    "$ref": "#/components/schemas/title"
                  },
                  "description": {
                    "$ref": "#/components/schemas/description"
                  },
                  "process_graph": {
                    "$ref": "#/components/schemas/process_graph"
                  },
                  "type": {
                    "$ref": "#/components/schemas/service_type"
                  },
                  "enabled": {
                    "$ref": "#/components/schemas/service_enabled"
                  },
                  "parameters": {
                    "$ref": "#/components/schemas/service_parameters"
                  },
                  "plan": {
                    "$ref": "#/components/schemas/billing_plan_defaultable"
                  },
                  "budget": {
                    "$ref": "#/components/schemas/budget"
                  }
                }
              }
            }
          },
          "description": "The base data for the secondary web service to create"
        }
      }
    },
    "/services/{service_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/service_id"
        }
      ],
      "patch": {
        "summary": "Modify a service",
        "description": "Calling this endpoint will change the specified secondary web service, but maintain its identifier. Changes can be grouped in a single request. To change the service type create a new service.",
        "tags": [
          "Secondary Services Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Changes to the service were applied successfully."
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Update Secondary Web Service Request",
                "type": "object",
                "properties": {
                  "title": {
                    "$ref": "#/components/schemas/title"
                  },
                  "description": {
                    "$ref": "#/components/schemas/description"
                  },
                  "process_graph": {
                    "$ref": "#/components/schemas/process_graph"
                  },
                  "enabled": {
                    "$ref": "#/components/schemas/service_enabled"
                  },
                  "parameters": {
                    "$ref": "#/components/schemas/service_parameters"
                  },
                  "plan": {
                    "$ref": "#/components/schemas/billing_plan_defaultable"
                  },
                  "budget": {
                    "$ref": "#/components/schemas/budget"
                  }
                }
              }
            }
          },
          "description": "The data to change for the spcified secondary web service."
        }
      },
      "get": {
        "summary": "Full metadata for a service",
        "description": "Requests to this endpoint will return JSON description of the secondary web service.",
        "tags": [
          "Secondary Services Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the created service",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Secondary Web Service Response",
                  "description": "Metadata of a service.",
                  "type": "object",
                  "required": [
                    "id",
                    "process_graph",
                    "enabled",
                    "type",
                    "url",
                    "parameters",
                    "attributes"
                  ],
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/service_id"
                    },
                    "title": {
                      "$ref": "#/components/schemas/title"
                    },
                    "description": {
                      "$ref": "#/components/schemas/description"
                    },
                    "process_graph": {
                      "$ref": "#/components/schemas/process_graph"
                    },
                    "url": {
                      "$ref": "#/components/schemas/service_url"
                    },
                    "type": {
                      "$ref": "#/components/schemas/service_type"
                    },
                    "enabled": {
                      "$ref": "#/components/schemas/service_enabled"
                    },
                    "parameters": {
                      "$ref": "#/components/schemas/service_parameters"
                    },
                    "attributes": {
                      "title": "Secondary Web Service Attributes",
                      "type": "object",
                      "description": "Additional attributes of the secondary web service, e.g. available layers for a WMS based on the bands in the underlying GeoTiff. See `GET /service_types` for supported attributes.",
                      "example": {
                        "layers": [
                          "ndvi",
                          "evi"
                        ]
                      }
                    },
                    "submitted": {
                      "$ref": "#/components/schemas/submitted"
                    },
                    "plan": {
                      "$ref": "#/components/schemas/billing_plan"
                    },
                    "costs": {
                      "$ref": "#/components/schemas/money"
                    },
                    "budget": {
                      "$ref": "#/components/schemas/budget"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      },
      "delete": {
        "summary": "Delete a service",
        "description": "Calling this endpoint will stop a given secondary web service to access result data.",
        "tags": [
          "Secondary Services Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "The service has been successfully deleted."
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      }
    },
    "/jobs": {
      "get": {
        "summary": "List all batch jobs",
        "description": "Requests to this endpoint will list all batch jobs submitted by a user with given id.",
        "tags": [
          "Batch Job Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of job descriptions",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Batch Job List Response",
                  "type": "object",
                  "required": [
                    "jobs",
                    "links"
                  ],
                  "properties": {
                    "jobs": {
                      "description": "Array of job descriptions",
                      "type": "array",
                      "items": {
                        "title": "Batch Job Metadata",
                        "description": "Defines a metadata subset of betch jobs that have been submitted by users. To get the full metadata for a job including a process graph call `GET /jobs/{job_id}`",
                        "type": "object",
                        "required": [
                          "id",
                          "status",
                          "submitted"
                        ],
                        "properties": {
                          "id": {
                            "$ref": "#/components/schemas/job_id"
                          },
                          "title": {
                            "$ref": "#/components/schemas/title"
                          },
                          "description": {
                            "$ref": "#/components/schemas/description"
                          },
                          "status": {
                            "$ref": "#/components/schemas/status"
                          },
                          "submitted": {
                            "$ref": "#/components/schemas/submitted"
                          },
                          "updated": {
                            "$ref": "#/components/schemas/updated"
                          },
                          "plan": {
                            "$ref": "#/components/schemas/billing_plan"
                          },
                          "costs": {
                            "$ref": "#/components/schemas/money"
                          },
                          "budget": {
                            "$ref": "#/components/schemas/budget"
                          }
                        }
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/list_links"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      },
      "post": {
        "summary": "Create a new batch job",
        "description": "Creates a new batch processing task (job) from one or more (chained) processes at the back-end.\n\nProcessing the data doesn't start yet. The job status gets initialized as `submitted` by default.",
        "tags": [
          "Batch Job Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/created"
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Store Batch Job Request",
                "type": "object",
                "required": [
                  "process_graph"
                ],
                "properties": {
                  "title": {
                    "$ref": "#/components/schemas/title"
                  },
                  "description": {
                    "$ref": "#/components/schemas/description"
                  },
                  "process_graph": {
                    "$ref": "#/components/schemas/process_graph"
                  },
                  "plan": {
                    "$ref": "#/components/schemas/billing_plan_defaultable"
                  },
                  "budget": {
                    "$ref": "#/components/schemas/budget"
                  }
                }
              }
            }
          },
          "description": "Specifies the job details, e.g. the process graph and billing details."
        }
      }
    },
    "/jobs/{job_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/job_id"
        }
      ],
      "patch": {
        "summary": "Modify a batch job",
        "description": "Modifies an existing job at the back-end but maintains the identifier. Changes can be grouped in a single request.\n\nJobs can only be modified when the job is not queued or running. Otherweise requests to this endpoint MUST be rejected with openEO error `JobLocked`.",
        "tags": [
          "Batch Job Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Changes to the job applied successfully."
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Update Batch Job Request",
                "type": "object",
                "properties": {
                  "title": {
                    "$ref": "#/components/schemas/title"
                  },
                  "description": {
                    "$ref": "#/components/schemas/description"
                  },
                  "process_graph": {
                    "$ref": "#/components/schemas/process_graph"
                  },
                  "plan": {
                    "$ref": "#/components/schemas/billing_plan_defaultable"
                  },
                  "budget": {
                    "$ref": "#/components/schemas/budget"
                  }
                }
              }
            }
          },
          "description": "Specifies the job details to update."
        }
      },
      "get": {
        "summary": "Full metadata for a batch job",
        "description": "Returns detailed information about a submitted batch job.",
        "tags": [
          "Batch Job Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Full job information.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Batch Job Response",
                  "description": "Defines full metadata of batch jobs that have been submitted by users.",
                  "type": "object",
                  "required": [
                    "id",
                    "process_graph",
                    "status",
                    "submitted"
                  ],
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/job_id"
                    },
                    "title": {
                      "$ref": "#/components/schemas/title"
                    },
                    "description": {
                      "$ref": "#/components/schemas/description"
                    },
                    "process_graph": {
                      "$ref": "#/components/schemas/process_graph"
                    },
                    "status": {
                      "$ref": "#/components/schemas/status"
                    },
                    "progress": {
                      "type": "number",
                      "description": "Indicates the process of a running batch job in percent.\nCan also be set for a job whiched errored out or was canceled by the user. In this case, the value indicates the progress at which the job stopped. Property may not be available for the status codes `submitted` and `queued`.\nSubmitted and queued jobs only allow the value `0`, finished jobs only allow the value `100`.",
                      "minimum": 0,
                      "maximum": 100,
                      "example": 75.5
                    },
                    "error": {
                      "oneOf": [
                        {
                          "nullable": true,
                          "enum": [
                            null
                          ]
                        },
                        {
                          "$ref": "#/components/schemas/job_error"
                        }
                      ]
                    },
                    "submitted": {
                      "$ref": "#/components/schemas/submitted"
                    },
                    "updated": {
                      "$ref": "#/components/schemas/updated"
                    },
                    "plan": {
                      "$ref": "#/components/schemas/billing_plan"
                    },
                    "costs": {
                      "$ref": "#/components/schemas/money"
                    },
                    "budget": {
                      "$ref": "#/components/schemas/budget"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      },
      "delete": {
        "summary": "Delete a batch job",
        "description": "Deletes all data related to this job. Computations are stopped and computed results are deleted. This job won't generate additional costs for processing.",
        "tags": [
          "Batch Job Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "The job has been successfully deleted."
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      }
    },
    "/jobs/{job_id}/estimate": {
      "get": {
        "summary": "Get an estimate for a batch job",
        "description": "Clients can ask for an estimate for a batch job. Back-ends can decide to either calculate the duration, the costs, the size or a combination of them. This MUST be the upper limit of the incurring costs. Clients can be charged less than specified, but never more. Back-end providers MAY specify an expiry time for the estimate. Starting to process data afterwards MAY be charged at a higher cost. Costs MAY NOT include downloading costs. This can be indicated with the `downloads_included` flag.",
        "tags": [
          "Batch Job Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/job_id"
          }
        ],
        "responses": {
          "200": {
            "description": "The estimated costs with regard to money, processing time and storage capacity. At least one of `costs`, `duration` or `size` MUST be provided.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Batch Job Estimate Response",
                  "type": "object",
                  "properties": {
                    "costs": {
                      "$ref": "#/components/schemas/money"
                    },
                    "duration": {
                      "type": "string",
                      "description": "Estimated duration for the operation. Duration MUST be specified as a ISO 8601 duration.",
                      "example": "P1Y2M10DT2H30M"
                    },
                    "size": {
                      "type": "integer",
                      "description": "Estimated required storage capacity, i.e. the size of the generated files. Size MUST be specified in bytes.",
                      "example": 157286400
                    },
                    "downloads_included": {
                      "type": "integer",
                      "nullable": true,
                      "description": "Specifies how many full downloads of the processed data are included in the estimate. Set to `null` for unlimited downloads, which is also the default value.",
                      "example": 5,
                      "default": null
                    },
                    "expires": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time until which the estimate is valid, formatted as a [RFC 3339](https://www.ietf.org/rfc/rfc3339) date-time.",
                      "example": "2020-11-01T00:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      }
    },
    "/jobs/{job_id}/results": {
      "parameters": [
        {
          "$ref": "#/components/parameters/job_id"
        }
      ],
      "get": {
        "summary": "Download results for a completed batch job",
        "description": "After finishing processing, this request will provide signed URLs to the processed files of the batch job.\n\nTitle, description and the date and time of the last update from the job SHOULD be included in the response.\n\nURL signing is a way to protect files from unauthorized access with a key instead of HTTP header based authorization. The URL signing key is similar to a password and it's inclusion in the URL allows to download files using simple GET requests supported by a wide range of programs, e.g. web browsers or download managers. Back-ends are responsible to generate the URL signing keys and their appropriate expiration. The back-end MAY indicate an expiration time by sending an `Expires` header.\n\nDepending on the `Accept` header, the response is either a JSON array containing links or a metalink XML document.\n\nIf processing has not finished yet requests to this endpoint MUST be rejected with openEO error `JobNotFinished`.\n\nA header named `OpenEO-Costs` MAY be sent with all responses to indicate the costs for downloading the data.",
        "tags": [
          "Batch Job Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Valid download links have been returned. The download links doesn't necessarily need to be located under the API base url.",
            "headers": {
              "Expires": {
                "description": "Indicates the expiration time of the signed URLs contained in this document. Needs to follow the specification at https://tools.ietf.org/html/rfc2616#section-14.21",
                "schema": {
                  "type": "string",
                  "example": "Wed, 21 Oct 2018 07:28:00 GMT"
                }
              },
              "OpenEO-Costs": {
                "description": "Specifies the costs for fully downloading the data **once**, i.e. this header MAY change in subsequent calls. It MUST be set to `0` if the requester is the owner of the job and still has free downloads included in his processing charges estimated by `GET /jobs/{job_id}/estimate`.\n If a requester other than the owner is requesting the data of a shared job this header indicates the costs for the requester.",
                "schema": {
                  "$ref": "#/components/schemas/money"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "title": "Batch Job Results Response",
                  "type": "object",
                  "required": [
                    "links"
                  ],
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/job_id"
                    },
                    "title": {
                      "$ref": "#/components/schemas/title"
                    },
                    "description": {
                      "$ref": "#/components/schemas/description"
                    },
                    "updated": {
                      "$ref": "#/components/schemas/updated"
                    },
                    "links": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/link"
                      },
                      "example": [
                        {
                          "href": "https://openeo.org/api/v0.4/download/583fba8b2ce/1.tif",
                          "type": "image/tiff"
                        },
                        {
                          "href": "https://openeo.org/api/v0.4/download/583fba8b2ce/2.tif",
                          "type": "image/tiff"
                        }
                      ]
                    }
                  }
                }
              },
              "application/metalink+xml": {
                "examples": {
                  "response": {
                    "summary": "External metalink file as an example (no openEO related content).",
                    "externalValue": "http://releases.ubuntu.com/precise/ubuntu-12.04.5-server-amd64.metalink"
                  }
                }
              }
            }
          },
          "424": {
            "description": "The request can't be fulfilled as the batch job failed. This request will deliver the error message that was produced by the batch job.\n\nThis HTTP code MUST be sent only when the job `status` is `error`. The response to this error mirrors the `error` field in the `GET /jobs/{job_id}` repoonse.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/job_error"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      },
      "post": {
        "summary": "Start processing a batch job",
        "description": "Adds a batch job to the processing queue to compute the results.\n\nThe result will be stored in the format specified in the process graph. To specify the format use a process such as `save_result`.\n\nThis endpoint has no effect if the job status is already `queued` or `running`. In particular, it doesn't restart a running job. Processing MUST be canceled before to restart it.\n\nThe job status is set to `queued`, if processing doesn't start instantly.\n* Once the processing starts the status is set to `running`.\n \n* Once the data is available to download the status is set to `finished`.\n    \n* Whenever an error occurs during processing, the status must be set to `error`.",
        "tags": [
          "Batch Job Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "202": {
            "description": "The creation of the resource has been queued successfully."
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      },
      "delete": {
        "summary": "Cancel processing a batch job",
        "description": "Cancels all related computations for this job at the back-end. It will stop generating additional costs for processing.\n\nA subset of processed results may be available for downloading depending on the state of the job as it was canceled. Finished results MUST NOT be deleted until the job is deleted or job processing is started again.\n\nThis endpoint only has an effect if the job status is `queued` or `running`.\n\nThe job status is set to `canceled` if the status was `running` beforehand and partial or preliminary results are available to be downloaded. Otherwise the status ist set to `submitted`. ",
        "tags": [
          "Batch Job Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Processing the job has been successfully canceled."
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      }
    },
    "/files/{user_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/user_id"
        }
      ],
      "get": {
        "summary": "List all files in the workspace",
        "description": "This service lists all user-uploaded files that are stored at the back-end.",
        "tags": [
          "File Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Flattened file tree with path relative to the user's root directory and some basic properties such as the file size and the timestamp of the last modification. All properties except the name are optional. Folders MUST NOT be listed separately so each element in the list MUST be a downloadable file.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Workspace Files List Response",
                  "type": "object",
                  "required": [
                    "files",
                    "links"
                  ],
                  "properties": {
                    "files": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/file"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/list_links"
                    }
                  },
                  "example": {
                    "files": [
                      {
                        "path": "test.txt",
                        "size": 182,
                        "modified": "2015-10-20T17:22:10Z"
                      },
                      {
                        "path": "test.tif",
                        "size": 183142,
                        "modified": "2017-01-01T09:36:18Z"
                      },
                      {
                        "path": "Sentinel2/S2A_MSIL1C_20170819T082011_N0205_R121_T34KGD_20170819T084427.zip",
                        "size": 4183353142,
                        "modified": "2018-01-03T10:55:29Z"
                      }
                    ],
                    "links": []
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      }
    },
    "/files/{user_id}/{path}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/user_id"
        },
        {
          "$ref": "#/components/parameters/file_path"
        }
      ],
      "get": {
        "summary": "Download a file from the workspace",
        "description": "This service downloads a user files identified by its path relative to the user's root directory.\nIf a folder is specified as path a `FileOperationUnsupported` error MUST be sent as response.",
        "tags": [
          "File Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "A file from the workspace.",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      },
      "put": {
        "summary": "Upload a file to the workspace",
        "description": "This service uploads a new or updates an existing file at a given path.\n\nFolders are created once required by a file upload. Empty folders can't be created.",
        "tags": [
          "File Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/user_id"
          },
          {
            "$ref": "#/components/parameters/file_path"
          }
        ],
        "responses": {
          "200": {
            "description": "The file has been uploaded successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/file"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        },
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a file from the workspace",
        "description": "This service deletes an existing user-uploaded file specified by its path. Resulting empty folders MUST be deleted automatically.\n\nBack-ends MAY support deleting folders including its files and subfolders.  If not supported by the back-end a `FileOperationUnsupported` error MUST be sent as response.",
        "tags": [
          "File Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/user_id"
          },
          {
            "$ref": "#/components/parameters/file_path"
          }
        ],
        "responses": {
          "204": {
            "description": "The file has been successfully deleted at the back-end."
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      }
    },
    "/me": {
      "get": {
        "summary": "Information about the authenticated user",
        "description": "This endpoint always returns the user id and MAY return the disk quota available to the user. It MAY also return additional links related to the user, e.g. where payments are handled or the user profile could be changed.\nFor back-ends that involve accounting, this service MAY also return the currently available money or credits in the currency the back-end is working with.\nThis endpoint MAY be extended to fulfil the specification of the [OpenID Connect UserInfo Endpoint](http://openid.net/specs/openid-connect-core-1_0.html#UserInfo).",
        "tags": [
          "Account Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Information about the logged in user.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "User Data Response",
                  "description": "Holds user information. If no budget or storage limit applies to the user account the corresponding properties MUST be set to null.",
                  "type": "object",
                  "required": [
                    "user_id"
                  ],
                  "properties": {
                    "user_id": {
                      "$ref": "#/components/schemas/user_id"
                    },
                    "storage": {
                      "title": "User Storage",
                      "description": "Information about the storage space available to the user.",
                      "type": "object",
                      "nullable": true,
                      "required": [
                        "free",
                        "quota"
                      ],
                      "properties": {
                        "free": {
                          "type": "integer",
                          "description": "Free storage space in bytes, which is still availble to the user. Effectively, this is the disk quota minus the used space by the user, e.g. user-uploaded files and job results.",
                          "example": 536870912
                        },
                        "quota": {
                          "type": "integer",
                          "description": "Maximum storage space (disk quota) in bytes available to the user.",
                          "example": 1073741824
                        }
                      }
                    },
                    "budget": {
                      "$ref": "#/components/schemas/budget"
                    },
                    "links": {
                      "description": "Additional links related to the user, e.g. where payments are handled or the user profile could be changed.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/link"
                      },
                      "example": [
                        {
                          "href": "http://www.openeo.org/john_doe/payment/",
                          "rel": "payment"
                        },
                        {
                          "href": "http://www.openeo.org/john_doe/edit/",
                          "rel": "edit"
                        },
                        {
                          "href": "http://www.openeo.org/john_doe/",
                          "rel": "about",
                          "type": "text/html",
                          "title": "User profile"
                        },
                        {
                          "href": "http://www.openeo.org/john_doe.vcf",
                          "rel": "about",
                          "type": "text/vcard",
                          "title": "vCard of the user"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      }
    },
    "/subscription": {
      "get": {
        "summary": "Subscribe to notifications",
        "description": "Get notified when execution updates occure, e.g. status updates for a job, recently updated EO collections or added/deleted resources like files and process graphs.\n\n**Note:** There are two main differences for this request compared to regular API requests:\n\n1. WebSockets use the `wss://` protocol instead of `https://` - `ws://` is not allowed!\n2. The authorization token is sent in the web socket requests, not as HTTP header. See the `authorization` field in the openEO API for Subscriptions for more details.\n\nAfter upgrading from HTTP to the WebSockets protocol, the [openEO API for Subscriptions](https://open-eo.github.io/openeo-api/v/0.4.2/apireference-subscriptions/) applies for requests and responses.",
        "tags": [
          "Batch Job Management",
          "File Management",
          "Process Graph Management",
          "Secondary Services Management",
          "EO Data Discovery"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "Connection",
            "in": "header",
            "description": "WebSocket handshake request to indicate that an upgrade is requested.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "Upgrade"
              ]
            }
          },
          {
            "name": "Upgrade",
            "in": "header",
            "description": "WebSocket handshake request to indicate the protocol to upgrade to.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "websocket"
              ]
            }
          },
          {
            "name": "Sec-WebSocket-Protocol",
            "in": "header",
            "description": "The Sec-WebSocket-Protocol header specifies the WebSocket protocols that you wish to use. The protocol to use is always `openeo-{api_version}`.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "openeo-v0.4"
              ]
            }
          },
          {
            "name": "Sec-WebSocket-Version",
            "in": "header",
            "description": "The WebSocket protocol version the client wishes to use when communicating with the server. This number should be the most recent version possible listed in the IANA WebSocket Version Number Registry.",
            "required": true,
            "schema": {
              "type": "number",
              "enum": [
                13
              ]
            }
          }
        ],
        "responses": {
          "101": {
            "description": "Successful subscription to notifications returns in a protocol change to a web socket connection. The web socket connection is described in the referenced openEO API for Subscriptions documentation."
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "collection_links": {
        "description": "Additional links related to this collection. Could reference to other meta data formats with additional information or a preview image.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/link"
        }
      },
      "list_links": {
        "description": "Additional links related to this list of resources. Could reference to alternative formats such as a rendered HTML version.\n\nThe links could also be used for pagination using the [rel types](https://www.iana.org/assignments/link-relations/link-relations.xhtml) `first`, `prev`, `next` and `last`. Pagination is currently OPTIONAL and clients may not support it. Therefore it MUST be implemented in a way that clients not supporting pagination get all resources regardless.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/link"
        }
      },
      "udf_links": {
        "type": "array",
        "description": "Related links, e.g. additional external documentation for this runtime.",
        "items": {
          "$ref": "#/components/schemas/link"
        }
      },
      "link": {
        "title": "Link",
        "description": "A link to another resource on the web. Bases on [RFC 5899](https://tools.ietf.org/html/rfc5988).",
        "type": "object",
        "required": [
          "href"
        ],
        "properties": {
          "rel": {
            "type": "string",
            "description": "Relationship between the current document and the linked document. SHOULD be a [registered link relation type](https://www.iana.org/assignments/link-relations/link-relations.xml) whenever feasible.",
            "example": "related"
          },
          "href": {
            "type": "string",
            "description": "The value MUST be a dereferenceable URL.",
            "format": "url",
            "example": "http://www.openeo.org"
          },
          "type": {
            "type": "string",
            "description": "The value MUST be a string that hints at the format used to represent data at the provided URI, preferably a media (MIME) type.",
            "example": "text/html"
          },
          "title": {
            "type": "string",
            "description": "Used as a human-readable label for a link.",
            "example": "openEO"
          }
        }
      },
      "money": {
        "description": "An amount of money or credits. The value MUST be specified in the currency the back-end is working with. The currency can be retrieved by calling `GET /`.",
        "type": "number",
        "example": 12.98
      },
      "budget": {
        "type": "number",
        "nullable": true,
        "default": null,
        "description": "Maximum amount of costs the user is allowed to produce. The value MUST be specified in the currency the back-end is working with. The currency can be retrieved by calling `GET /`. If possible, back-ends SHOULD reject jobs with openEO error `PaymentRequired` if the budget is too low to process the request completely. Otherwise, when reaching the budget jobs MAY try to return partial results if possible. Otherwise the request and results are discarded. Users SHOULD be warned by clients that reaching the budget MAY discard the results and that setting this value should be well-wrought. Setting the buget to `null` means there is no specified budget.",
        "example": 100
      },
      "billing_plan_defaultable": {
        "type": "string",
        "description": "The billing plan to process and charge the job with.\n\nThe plans and the default plan can be retrieved by calling `GET /`.\n\nBilling plans MUST be accepted *case insensitive*. Billing plans not on the list of available plans MUST be rejected with openEO error `BillingPlanInvalid`.\n\nIf no billing plan is specified by the client, the server MUST default to the default billing plan in `GET /`. If the default billing plan of the provider changes, the job or service MUST not be affected by the change, i.e. the default plan which is valid during job or service creation must be permanently assigned to the job or service until the client requests to change it.",
        "example": "free",
        "nullable": true
      },
      "billing_plan": {
        "type": "string",
        "description": "The billing plan to process and charge the job with. The plans can be retrieved by calling `GET /`. Billing plans MUST be accepted *case insensitive*.",
        "example": "free"
      },
      "collection_eo": {
        "title": "STAC EO (Electro-Optical)",
        "type": "object",
        "required": [
          "eo:gsd",
          "eo:platform",
          "eo:instrument",
          "eo:bands"
        ],
        "properties": {
          "eo:gsd": {
            "type": "number",
            "description": "The nominal Ground Sample Distance for the data, as measured in meters on the ground. Since GSD can vary across a scene depending on projection, this should be the average or most commonly used GSD in the center of the image. If the data includes multiple bands with different GSD values, this should be the value for the greatest number or most common bands. For instance, Landsat optical and short-wave IR bands are all 30 meters, but the panchromatic band is 15 meters. The eo:gsd should be 30 meters in this case since those are the bands most commonly used."
          },
          "eo:platform": {
            "type": "string",
            "description": "Unique name of the specific platform the instrument is attached to. For satellites this would be the name of the satellite (e.g., landsat-8, sentinel-2A), whereas for drones this would be a unique name for the drone."
          },
          "eo:constellation": {
            "type": "string",
            "description": "The name of the group of satellites that have similar payloads and have their orbits arranged in a way to increase the temporal resolution of acquisitions of data with similar geometric and radiometric characteristics. Examples are the Sentinel-2 constellation, which has S2A and S2B and RapidEye. This field allows users to search for Sentinel-2 data, for example, without needing to specify which specific platform the data came from."
          },
          "eo:instrument": {
            "type": "string",
            "description": "The name of the sensor used, although for Items which contain data from multiple sensors this could also name multiple sensors. For example, data from the Landsat-8 platform is collected with the OLI sensor as well as the TIRS sensor, but the data is distributed together and commonly referred to as OLI_TIRS."
          },
          "eo:epsg": {
            "type": "number",
            "format": "epsg-code",
            "description": "EPSG code of the datasource, `null` if no EPSG code.\n\nA Coordinate Reference System (CRS) is the native reference system (sometimes called a 'projection') used by the data, and can usually be referenced using an [EPSG code](http://epsg.io). If the data does not have a CRS, such as in the case of non-rectified imagery with Ground Control Points, `eo:epsg` should be set to `null`. It should also be set to `null` if a CRS exists, but for which there is no valid EPSG code.",
            "nullable": true
          },
          "eo:bands": {
            "type": "array",
            "description": "This is a list of the available bands where each item is a Band Object.",
            "items": {
              "title": "STAC EO Band",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the band (e.g., \"B01\", \"B02\", \"B1\", \"B5\", \"QA\")."
                },
                "common_name": {
                  "type": "string",
                  "description": "Not required, but **STRONGLY RECOMMENDED**! The name commonly used to refer to the band to make it easier to search for bands across instruments. See the \"[Common Band Names](https://github.com/radiantearth/stac-spec/tree/master/extensions/eo#common-band-names)\" for a list of accepted common names."
                },
                "description": {
                  "$ref": "#/components/schemas/collection_band_description"
                },
                "gsd": {
                  "type": "number",
                  "description": "Ground Sample distance, the nominal distance between pixel centers available, in meters. See eo:gsd for more information. Defaults to eo:gsd if not provided."
                },
                "accuracy": {
                  "type": "number",
                  "description": "The expected error between the measured location and the true location of a pixel, in meters on the ground."
                },
                "center_wavelength": {
                  "type": "number",
                  "description": "The center wavelength of the band, in micrometers (μm)."
                },
                "full_width_half_max": {
                  "type": "number",
                  "description": "Full width at half maximum (FWHM) is a common way to describe the size of a spectral band. It is the width, in micrometers (μm), of the bandpass measured at a half of the maximum transmission. Thus, if the maximum transmission of the bandpass was 80%, the FWHM is measured as the width of the bandpass at 40% transmission."
                }
              }
            }
          }
        }
      },
      "collection_sar": {
        "title": "STAC SAR",
        "type": "object",
        "required": [
          "sar:platform",
          "sar:instrument",
          "sar:instrument_mode",
          "sar:frequency_band",
          "sar:polarization",
          "sar:type"
        ],
        "properties": {
          "sar:platform": {
            "description": "Unique name of the specific platform the instrument is attached to. For satellites this would be the name of the satellite (e.g., landsat-8, sentinel-2A), whereas for drones this would be a unique name for the drone.",
            "type": "string"
          },
          "sar:constellation": {
            "description": "sar:constellation is the name of the group of satellites that have similar payloads and have their orbits arranged in a way to increase the temporal resolution of acquisitions of data with similar geometric and radiometric characteristics. Examples are the Sentinel-1 constellation, which has S1A, S1B, S1C and S1D and RADARSAT, which has RADARSAT-1 and RADARSAT-2. This field allows users to search for Sentinel-1 data, for example, without needing to specify which specific platform the data came from.",
            "type": "string"
          },
          "sar:instrument": {
            "description": "Name of the sensor used, although for Items which contain data from multiple sensors this could also name multiple sensors.",
            "type": "string"
          },
          "sar:instrument_mode": {
            "description": "The name of the sensor acquisition mode that is commonly used. This should be the short name, if available. For example, WV for \"Wave mode\" of Sentinel-1 and Envisat ASAR satellites.",
            "type": "string",
            "example": "WV"
          },
          "sar:frequency_band": {
            "description": "The common name for the frequency band to make it easier to search for bands across instruments. See section \"[Common Frequency Band Names](https://github.com/radiantearth/stac-spec/tree/master/extensions/sar/README.md#common-frequency-band-names)\" for a list of accepted names.",
            "type": "string",
            "enum": [
              "P",
              "L",
              "S",
              "C",
              "X",
              "Ku",
              "K",
              "Ka"
            ]
          },
          "sar:center_wavelength": {
            "description": "The center wavelength of the instrument, in centimeters (cm).",
            "type": "number"
          },
          "sar:center_frequency": {
            "description": "The center frequency of the instrument, in gigahertz (GHz).",
            "type": "number"
          },
          "sar:polarization": {
            "description": "A single polarization or a polarization combinations specified as array. For single polarized radars one of `HH`, `VV`, `HV` or `VH` must be set. Fully polarimetric radars add all four polarizations to the array. Dual polarized radars and alternating polarization add the corresponding polarizations to the array, for instance for `HH+HV` add both `HH` and `HV`.",
            "type": "array",
            "minItems": 1,
            "maxItems": 4,
            "items": {
              "type": "string",
              "enum": [
                "HH",
                "VV",
                "HV",
                "VH"
              ]
            }
          },
          "sar:bands": {
            "description": "This is a list of the available bands where each item is a Band Object.",
            "type": "array",
            "items": {
              "title": "STAC SAR Band",
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the band.",
                  "type": "string"
                },
                "description": {
                  "$ref": "#/components/schemas/collection_band_description"
                },
                "data_type": {
                  "description": "Specifies the type of the data contained in the band, for example `amplitude`, `intensity`, `phase`, `angle`, `sigma0`, `gamma0`.",
                  "type": "string"
                },
                "unit": {
                  "description": "The unit of measurement for the data, preferably the symbols from [SI](https://physics.nist.gov/cuu/Units/units.html) or [UDUNITS](https://ncics.org/portfolio/other-resources/udunits2/).",
                  "type": "string"
                },
                "polarization": {
                  "description": "The polarization of the band, either `HH`, `VV`, `HV`, `VH` or `null` if not applicable.",
                  "type": "string",
                  "nullable": true,
                  "enum": [
                    "HH",
                    "VV",
                    "HV",
                    "VH"
                  ]
                }
              }
            }
          },
          "sar:type": {
            "description": "The product type, for example `RAW`, `GRD`, `OCN` or `SLC` for Sentinel-1.",
            "type": "string"
          },
          "sar:resolution": {
            "description": "The maximum ability to distinguish two adjacent targets, in meters (m). The first element of the array is the range resolution, the second element is the azimuth resolution.",
            "type": "array",
            "minItems": 2,
            "maxItems": 2,
            "items": {
              "type": "number",
              "minimum": 0
            }
          },
          "sar:pixel_spacing": {
            "description": "The distance between adjacent pixels, in meters (m). The first element of the array is the range pixel spacing, the second element is the azimuth pixel spacing. Strongly RECOMMENDED to be specified for products of type `GRD`.",
            "type": "array",
            "minItems": 2,
            "maxItems": 2,
            "items": {
              "type": "number",
              "minimum": 0
            }
          },
          "sar:looks": {
            "description": "The number of groups of signal samples (looks). The first element of the array must be the number of range looks, the second element must be the number of azimuth looks, the optional third element is the equivalent number of looks (ENL).",
            "type": "array",
            "minItems": 2,
            "maxItems": 3,
            "items": {
              "type": "number",
              "minimum": 0
            }
          }
        }
      },
      "collection_sci": {
        "title": "STAC Scientific",
        "type": "object",
        "properties": {
          "sci:doi": {
            "type": "string",
            "description": "The DOI name of the collection, e.g. `10.1000/xyz123`. This MUST NOT be a DOIs link. For all DOI names respective DOI links SHOULD be added to the links section of the collection with relation type `cite-as`.",
            "pattern": "^(10[.][0-9]{4,}(?:[.][0-9]+)*/(?:(?![%\"#? ])\\S)+)$"
          },
          "sci:citation": {
            "type": "string",
            "description": "The recommended human-readable reference (citation) to be used by publications citing this collection. No specific citation style is suggested, but the citation should contain all information required to find the publication distinctively."
          },
          "sci:publications": {
            "type": "array",
            "title": "STAC Scientific Publications",
            "description": "A list of publications which describe and reference the collection.",
            "items": {
              "type": "object",
              "properties": {
                "doi": {
                  "type": "string",
                  "description": "The DOI name of a publication which describes and references the collection. The publications should include more information about the collection and how it was processed. This MUST NOT be a DOIs link. For all DOI names respective DOI links SHOULD be added to the links section of the collection with relation type `cite-as`.",
                  "pattern": "^(10[.][0-9]{4,}(?:[.][0-9]+)*/(?:(?![%\"#? ])\\S)+)$"
                },
                "citation": {
                  "type": "string",
                  "description": "Human-readable reference (citation) of a publication which describes and references the collection. The publications should include more information about the collection and how it was processed. No specific citation style is suggested, but a citation should contain all information required to find the publication distinctively."
                }
              }
            }
          }
        }
      },
      "collection_keywords": {
        "type": "array",
        "description": "List of keywords describing the collection.",
        "items": {
          "type": "string"
        }
      },
      "collection_version": {
        "type": "string",
        "description": "Version of the collection."
      },
      "collection_providers": {
        "type": "array",
        "description": "A list of providers, which may include all organizations capturing or processing the data or the hosting provider. Providers should be listed in chronological order with the most recent provider being the last element of the list.",
        "items": {
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "The name of the organization or the individual.",
              "type": "string"
            },
            "description": {
              "description": "Multi-line description to add further provider information such as processing details for processors and producers, hosting details for hosts or basic contact information.\n\nCommonMark 0.28 syntax MAY be used for rich text representation.",
              "type": "string"
            },
            "roles": {
              "description": "Roles of the provider.\n\nThe provider's role(s) can be one or more of the following elements:\n* licensor: The organization that is licensing the dataset under the license specified in the collection's license field.\n* producer: The producer of the data is the provider that initially captured and processed the source data, e.g. ESA for Sentinel-2 data.\n* processor: A processor is any provider who processed data to a derived product.\n* host: The host is the actual provider offering the data on their storage. There should be no more than one host, specified as last element of the list.",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "producer",
                  "licensor",
                  "processor",
                  "host"
                ]
              }
            },
            "url": {
              "description": "Homepage on which the provider describes the dataset and publishes contact information.",
              "type": "string",
              "format": "url"
            }
          }
        }
      },
      "collection_license": {
        "type": "string",
        "description": "Collection's license(s) as a SPDX [License identifier](https://spdx.org/licenses/) or  [expression](https://spdx.org/spdx-specification-21-web-version#h.jxpfx0ykyb60), or `proprietary` if the license is not on the SPDX license list. Proprietary licensed data SHOULD add a link to the license text with the `license` relation in the links section. The license text MUST NOT be provided as a value of this field. If there is no public license URL available, it is RECOMMENDED to host the license text independently and link to it.",
        "example": "Apache-2.0"
      },
      "collection_extent": {
        "type": "object",
        "title": "STAC Collection Extent",
        "description": "The object describes the spatio-temporal extents of the Collection. Both spatial and temporal extents are required to be specified.",
        "required": [
          "spatial",
          "temporal"
        ],
        "properties": {
          "spatial": {
            "description": "Potential *spatial extent* covered by the collection. The bounding box is provided as four or six numbers, depending on whether the coordinate reference system includes a vertical axis (height or depth):\n\n- West (lower left corner, coordinate axis 1)\n- South (lower left corner, coordinate axis 2)\n- Base (optional, lower left corner, coordinate axis 3)\n- East (upper right corner, coordinate axis 1)\n- North (upper right corner, coordinate axis 2)\n- Height (optional, upper right corner, coordinate axis 3)\n\nThe coordinate reference system of the values is WGS84 longitude/latitude.",
            "type": "array",
            "minItems": 4,
            "maxItems": 6,
            "items": {
              "type": "number"
            },
            "example": [
              -180,
              -90,
              180,
              90
            ]
          },
          "temporal": {
            "type": "array",
            "description": "Potential *temporal extent* covered by the collection. The temporal extent specified by a start and an end time, each formatted as a [RFC 3339](https://www.ietf.org/rfc/rfc3339) date-time. Open date ranges are supported and can be specified by setting one of the times to null. Setting both entries to null is not allowed. Only the Gregorian calendar is supported.",
            "example": [
              "2016-01-01T00:00:00Z",
              null
            ],
            "minItems": 2,
            "maxItems": 2,
            "items": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          }
        }
      },
      "collection_id": {
        "type": "string",
        "description": "Identifier for the collection that is unique across the provider.\n\nMUST match the specified pattern.",
        "pattern": "^[A-Za-z0-9_\\-\\.~\\/]+$",
        "example": "Sentinel-2A"
      },
      "collection_dimension_type_spatial": {
        "description": "Type of the dimension, always `spatial`.",
        "type": "string",
        "enum": [
          "spatial"
        ]
      },
      "collection_dimension_extent_open": {
        "description": "If the dimension consists of [ordinal](https://en.wikipedia.org/wiki/Level_of_measurement#Ordinal_scale) values, the extent (lower and upper bounds) of the values as two-dimensional array. Use `null` for open intervals.",
        "type": "array",
        "minItems": 2,
        "maxItems": 2,
        "items": {
          "type": "number",
          "nullable": true
        }
      },
      "collection_dimension_values": {
        "description": "A set of all potential values, especially useful for [nominal](https://en.wikipedia.org/wiki/Level_of_measurement#Nominal_level) values.\n\n**Important:** The order of the values MUST be exactly how the dimension values are also ordered in the data (cube). If the values specify band names, the values MUST be in the same order as they are in the corresponding band fields (i.e. `eo:bands` or `sar:bands`).",
        "type": "array",
        "minItems": 1,
        "items": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        }
      },
      "collection_dimension_step": {
        "description": "If the dimension consists of [interval](https://en.wikipedia.org/wiki/Level_of_measurement#Interval_scale) values, the space between the values. Use `null` for irregularly spaced steps.",
        "type": "number",
        "nullable": true
      },
      "collection_dimension_unit": {
        "description": "The unit of measurement for the data, preferably the symbols from [SI](https://physics.nist.gov/cuu/Units/units.html) or [UDUNITS](https://ncics.org/portfolio/other-resources/udunits2/).",
        "type": "string"
      },
      "collection_dimension_reference_system_spatial": {
        "description": "The spatial reference system for the data, specified as [EPSG code](http://www.epsg-registry.org/) or [PROJ definition](https://proj4.org/operations/projections/index.html). Defaults to EPSG code 4326.",
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "number",
            "default": 4326
          }
        ]
      },
      "stac_version": {
        "type": "string",
        "description": "The STAC version the collection implements.",
        "example": "0.6.2"
      },
      "variable": {
        "title": "Process Graph Variable",
        "description": "Process graphs can hold a variable, which can be filled in later. For shared process graphs this can be useful to make them more portable, e.g in case a back-end specific product name would be stored with the process graph.\n\nIf a process graph with a variable is about to be executed and neither a value nor a default value is specified, the back-end MUST reject the request with an error of type `VariableValueMissing`. The values are usually defined when loading the process graph with the `run_process_graph` process.\n\nInvalid variable types MUST be rejected with error `VariableTypeInvalid`. If the default value is not compatible to the specified type an `VariableDefaultValueTypeInvalid` error MUST be sent. Invalid variable ids MUST be rejected with error `VariableIdInvalid`. ",
        "type": "object",
        "required": [
          "variable_id"
        ],
        "properties": {
          "variable_id": {
            "type": "string",
            "description": "The name of the variable. Can be any valid JSON key, but it is RECOMMENDED to use snake case and limit the characters to `a-z`, `0-9` and `_`."
          },
          "type": {
            "type": "string",
            "description": "The value for type is the expected data type for the content of the variable. `null` is allowed for all types.",
            "enum": [
              "string",
              "number",
              "integer",
              "boolean",
              "array",
              "object"
            ],
            "default": "string"
          },
          "description": {
            "description": "Optional description about the variable.",
            "type": "string",
            "nullable": true
          },
          "default": {
            "description": "Whenever no value for the variable is defined, the default value is used.",
            "nullable": true,
            "anyOf": [
              {
                "type": "object",
                "nullable": true
              },
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "array",
                "items": {}
              },
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/process_graph"
              }
            ]
          }
        }
      },
      "process_node": {
        "title": "Process Node",
        "type": "object",
        "required": [
          "process_id",
          "arguments"
        ],
        "properties": {
          "process_id": {
            "$ref": "#/components/schemas/process_id"
          },
          "result": {
            "type": "boolean",
            "description": "Used to specify which node is the last in the chain and returns the result to return to the requesting context. This flag MUST only be set once in each list of process nodes.",
            "default": false
          },
          "description": {
            "description": "Optional description about the process and its arguments.",
            "type": "string",
            "nullable": true
          },
          "arguments": {
            "$ref": "#/components/schemas/process_arguments"
          }
        }
      },
      "process_arguments": {
        "title": "Process Arguments",
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/process_argument_value"
        }
      },
      "process_argument_value": {
        "title": "Process Argument Value",
        "description": "Arguments for a process. See the API documentation for more information.",
        "nullable": true,
        "anyOf": [
          {
            "type": "object",
            "nullable": true,
            "title": "Object"
          },
          {
            "type": "string",
            "title": "String"
          },
          {
            "type": "number",
            "title": "Number (incl. integers)"
          },
          {
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "type": "array",
            "title": "Array",
            "items": {
              "$ref": "#/components/schemas/process_argument_value"
            }
          },
          {
            "$ref": "#/components/schemas/variable"
          },
          {
            "type": "object",
            "title": "Result",
            "description": "Data that is expected to be passed from another process.",
            "required": [
              "from_node"
            ],
            "properties": {
              "from_node": {
                "description": "The ID of the node that data is expected to come from.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "title": "Callback Parameter",
            "description": "Data that is expected to be passed to a callback from a calling process.",
            "required": [
              "from_argument"
            ],
            "properties": {
              "from_argument": {
                "description": "The name of the parameter that is made available to a callback by a calling process.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "title": "Callback",
            "description": "Process graph to be executed as callback from withing the process.",
            "required": [
              "callback"
            ],
            "properties": {
              "callback": {
                "$ref": "#/components/schemas/process_graph"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "process_graph": {
        "title": "Process Graph",
        "description": "A process graph defines a graph-like structure as a connected set of executable processes. Each key is a unique identifier (node id) that is used to refer to the process in the graph.",
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/process_node"
        },
        "example": {
          "dc": {
            "process_id": "load_collection",
            "arguments": {
              "id": "Sentinel-2",
              "spatial_extent": {
                "west": 16.1,
                "east": 16.6,
                "north": 48.6,
                "south": 47.2
              },
              "temporal_extent": [
                "2018-01-01",
                "2018-02-01"
              ]
            }
          },
          "bands": {
            "process_id": "filter_bands",
            "description": "Filter and order the bands. The order is important for the following reduce operation.",
            "arguments": {
              "data": {
                "from_node": "dc"
              },
              "bands": [
                "B08",
                "B04",
                "B02"
              ]
            }
          },
          "evi": {
            "process_id": "reduce",
            "description": "Compute the EVI. Formula: 2.5 * (NIR - RED) / (1 + NIR + 6*RED + -7.5*BLUE)",
            "arguments": {
              "data": {
                "from_node": "bands"
              },
              "dimension": "spectral",
              "reducer": {
                "callback": {
                  "nir": {
                    "process_id": "array_element",
                    "arguments": {
                      "data": {
                        "from_argument": "data"
                      },
                      "index": 0
                    }
                  },
                  "red": {
                    "process_id": "array_element",
                    "arguments": {
                      "data": {
                        "from_argument": "data"
                      },
                      "index": 1
                    }
                  },
                  "blue": {
                    "process_id": "array_element",
                    "arguments": {
                      "data": {
                        "from_argument": "data"
                      },
                      "index": 2
                    }
                  },
                  "sub": {
                    "process_id": "subtract",
                    "arguments": {
                      "data": [
                        {
                          "from_node": "nir"
                        },
                        {
                          "from_node": "red"
                        }
                      ]
                    }
                  },
                  "p1": {
                    "process_id": "product",
                    "arguments": {
                      "data": [
                        6,
                        {
                          "from_node": "red"
                        }
                      ]
                    }
                  },
                  "p2": {
                    "process_id": "product",
                    "arguments": {
                      "data": [
                        -7.5,
                        {
                          "from_node": "blue"
                        }
                      ]
                    }
                  },
                  "sum": {
                    "process_id": "sum",
                    "arguments": {
                      "data": [
                        1,
                        {
                          "from_node": "nir"
                        },
                        {
                          "from_node": "p1"
                        },
                        {
                          "from_node": "p2"
                        }
                      ]
                    }
                  },
                  "div": {
                    "process_id": "divide",
                    "arguments": {
                      "data": [
                        {
                          "from_node": "sub"
                        },
                        {
                          "from_node": "sum"
                        }
                      ]
                    }
                  },
                  "p3": {
                    "process_id": "product",
                    "arguments": {
                      "data": [
                        2.5,
                        {
                          "from_node": "div"
                        }
                      ]
                    },
                    "result": true
                  }
                }
              }
            }
          },
          "mintime": {
            "process_id": "reduce",
            "description": "Compute a minimum time composite by reducing the temporal dimension",
            "arguments": {
              "data": {
                "from_node": "evi"
              },
              "dimension": "temporal",
              "reducer": {
                "callback": {
                  "min": {
                    "process_id": "min",
                    "arguments": {
                      "data": {
                        "from_argument": "data"
                      }
                    },
                    "result": true
                  }
                }
              }
            }
          },
          "save": {
            "process_id": "save_result",
            "arguments": {
              "data": {
                "from_node": "mintime"
              },
              "format": "GTiff"
            },
            "result": true
          }
        }
      },
      "process": {
        "title": "Process",
        "type": "object",
        "required": [
          "id",
          "description",
          "parameters",
          "returns"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/process_id"
          },
          "summary": {
            "type": "string",
            "description": "A short summary of what the process does."
          },
          "description": {
            "$ref": "#/components/schemas/process_description"
          },
          "categories": {
            "type": "array",
            "description": "A list of categories.",
            "items": {
              "type": "string",
              "description": "Name of the category."
            }
          },
          "parameter_order": {
            "type": "array",
            "description": "Describes the order or the parameter for any environments that don't support named parameters. This property MUST be present for all processes with two or more parameters.",
            "items": {
              "type": "string",
              "description": "Each item MUST correspond to a key in the `parameters` object.",
              "pattern": "^[A-Za-z0-9_]+$"
            }
          },
          "parameters": {
            "type": "object",
            "title": "Process Parameters",
            "description": "A list of parameters that are applicable for this process. The keys of the object are the names of the parameters. They keys MUST match the following pattern: `^[A-Za-z0-9_]+$`",
            "additionalProperties": {
              "title": "Process Parameter",
              "type": "object",
              "required": [
                "description",
                "schema"
              ],
              "properties": {
                "description": {
                  "$ref": "#/components/schemas/process_description"
                },
                "required": {
                  "type": "boolean",
                  "description": "Determines whether this parameter is mandatory.",
                  "default": false
                },
                "deprecated": {
                  "$ref": "#/components/schemas/process_deprecated"
                },
                "experimental": {
                  "$ref": "#/components/schemas/process_experimental"
                },
                "media_type": {
                  "$ref": "#/components/schemas/process_media_type"
                },
                "schema": {
                  "$ref": "#/components/schemas/json_schema"
                }
              }
            }
          },
          "returns": {
            "type": "object",
            "title": "Process Return Value",
            "description": "The data that is returned from this process.",
            "required": [
              "description",
              "schema"
            ],
            "properties": {
              "description": {
                "$ref": "#/components/schemas/process_description"
              },
              "media_type": {
                "$ref": "#/components/schemas/process_media_type"
              },
              "schema": {
                "$ref": "#/components/schemas/json_schema"
              }
            }
          },
          "deprecated": {
            "$ref": "#/components/schemas/process_deprecated",
            "type": "boolean"
          },
          "experimental": {
            "$ref": "#/components/schemas/process_experimental"
          },
          "exceptions": {
            "type": "object",
            "title": "Process Exceptions",
            "description": "Declares any exceptions (errors) that might occur during execution of this process. MUST be used only for exceptions that stop the execution of a process and are therefore not to be used for warnings, or notices or debugging messages.\n\nThe keys define the error code and MUST match the following pattern: `^[A-Za-z0-9_]+$`\n\nThis schema follows the schema of the general openEO error list (see errors.json).",
            "additionalProperties": {
              "title": "Process Exception",
              "type": "object",
              "required": [
                "message"
              ],
              "properties": {
                "description": {
                  "type": "string",
                  "description": "Detailed description to fully explain the error to client users and back-end developers. This should not be shown in the clients directly, but may be linked to in the errors `url` property.  \n\n[CommonMark 0.28](http://commonmark.org/) syntax MAY be used for rich text representation."
                },
                "message": {
                  "type": "string",
                  "description": "Explains the reason the server is rejecting the request. This message is intended to be displayed to the client user. For \"4xx\" error codes the message should explain shortly how the client needs to modify the request.\n\nThe message MAY contain variables, which are enclosed by curly brackets. Example: `{variable_name}`",
                  "example": "The value specified for the process argument '{argument}' in process '{process}' is invalid: {reason}"
                },
                "http": {
                  "type": "integer",
                  "description": "HTTP Status Code, following the [error handling conventions in openEO](https://open-eo.github.io/openeo-api/v/0.4.2/errors/). Defaults to `400`.",
                  "default": 400
                }
              }
            }
          },
          "examples": {
            "type": "array",
            "description": "Examples, may be used for tests. Either `process_graph` or `arguments` must be set, never both.",
            "items": {
              "title": "Process Example",
              "type": "object",
              "oneOf": [
                {
                  "title": "Process Example with Process Graph",
                  "required": [
                    "process_graph"
                  ]
                },
                {
                  "title": "Process Example with Arguments",
                  "required": [
                    "arguments"
                  ]
                }
              ],
              "properties": {
                "title": {
                  "type": "string",
                  "description": "A title for the example."
                },
                "description": {
                  "$ref": "#/components/schemas/process_description"
                },
                "process_graph": {
                  "$ref": "#/components/schemas/process_graph"
                },
                "arguments": {
                  "$ref": "#/components/schemas/process_arguments"
                },
                "returns": {
                  "nullable": true
                }
              }
            }
          },
          "links": {
            "type": "array",
            "description": "Related links, e.g. additional external documentation for this process.",
            "items": {
              "$ref": "#/components/schemas/link"
            }
          }
        }
      },
      "process_id": {
        "type": "string",
        "description": "Unique identifier of the process.",
        "pattern": "^[A-Za-z0-9_]+$",
        "example": "ndvi"
      },
      "process_experimental": {
        "type": "boolean",
        "description": "Declares the process or parameter to be experimental, which means that it\n  is likely to change or may produce unpredictable behaviour.\n  Users should refrain from using it in production,\n  but still feel encouraged to try it out and give feedback.",
        "default": false
      },
      "process_deprecated": {
        "type": "boolean",
        "description": "Specifies that the process or parameter is deprecated with the potential to\n  be removed in any of the next versions. It should\n  be transitioned out of usage as soon as possible and users\n  should refrain from using it in new implementations.",
        "default": false
      },
      "process_graph_id": {
        "type": "string",
        "description": "Unique identifier of a job that is generated by the back-end during job submission. MUST match the specified pattern.",
        "pattern": "^[A-Za-z0-9_\\-\\.~]+$",
        "example": "cc2bab1e3b3a52aa"
      },
      "job_id": {
        "type": "string",
        "description": "Unique identifier of a job that is generated by the back-end during job submission. MUST match the specified pattern.",
        "pattern": "^[A-Za-z0-9_\\-\\.~]+$",
        "example": "a3cca2b2aa1e3b5b"
      },
      "submitted": {
        "type": "string",
        "format": "date-time",
        "description": "Date and time of creation, formatted as a [RFC 3339](https://www.ietf.org/rfc/rfc3339) date-time.",
        "example": "2017-01-01T09:32:12Z"
      },
      "updated": {
        "type": "string",
        "format": "date-time",
        "description": "Date and time of last status change, formatted as a [RFC 3339](https://www.ietf.org/rfc/rfc3339) date-time.",
        "example": "2017-01-01T09:36:18Z"
      },
      "user_id": {
        "type": "string",
        "description": "Unique identifier of the user. MUST match the specified pattern. SHOULD be a human-friendly user name instead of a randomly generated identifier.",
        "pattern": "^[A-Za-z0-9_\\-\\.~]+$",
        "example": "john_doe"
      },
      "status": {
        "type": "string",
        "enum": [
          "submitted",
          "queued",
          "running",
          "canceled",
          "finished",
          "error"
        ],
        "description": "The current status of a batch job.\n\nThe following status changes can occur:\n* `POST /jobs`: The status is initialized as `submitted`.\n* `POST /jobs/{job_id}/results`: The status is set to `queued`, if processing doesn't start instantly.\n    * Once the processing starts the status is set to `running`.\n    * Once the data is available to download the status is set to `finished`.\n    * Whenever an error occurs during processing, the status must be set to `error`.\n* `DELETE /jobs/{job_id}/results`: The status is set to `canceled` if the status was `running` beforehand and partial or preliminary results are available to be downloaded. Otherwise the status ist set to `submitted`. ",
        "example": "running",
        "default": "submitted"
      },
      "title": {
        "description": "A short description to easily distinguish entities.",
        "type": "string",
        "nullable": true,
        "example": "NDVI based on Sentinel 2"
      },
      "description": {
        "description": "Detailed description to fully explain the entity.\n\n[CommonMark 0.28](http://commonmark.org/) syntax MAY be used for rich text representation.",
        "type": "string",
        "nullable": true,
        "example": "Deriving minimum NDVI measurements over pixel time series of Sentinel 2"
      },
      "process_description": {
        "description": "Detailed description to fully explain the entity.\n\n[CommonMark 0.28](http://commonmark.org/) syntax MAY be used for rich text representation. In addition to the CommonMark syntax, clients can convert process IDs that are formatted as in the following example into links instead of code blocks: ``` ``process_id()`` ```",
        "type": "string"
      },
      "collection_title": {
        "description": "A short descriptive one-line title for the collection.",
        "type": "string"
      },
      "collection_description": {
        "description": "Detailed multi-line description to fully explain the collection.\n\n[CommonMark 0.28](http://commonmark.org/) syntax MAY be used for rich text representation.",
        "type": "string"
      },
      "collection_band_description": {
        "description": "Description to fully explain the band, should include processing information.\n\n[CommonMark 0.28](http://commonmark.org/) syntax MAY be used for rich text representation.",
        "type": "string"
      },
      "service_type": {
        "description": "Definintion of the service type to access result data. All available service types can be retrieved via `GET /service_types`. Service types MUST be accepted *case insensitive*.",
        "type": "string",
        "example": "wms"
      },
      "service_parameters": {
        "type": "object",
        "title": "Service Parameters",
        "description": "List of arguments, i.e. the parameter names supported by the secondary web service combined with actual values. See `GET /service_types` for supported parameters and valid arguments. For example, this could specify the required version of the service, visualization details or any other service dependant configuration.",
        "example": {
          "version": "1.3.0"
        }
      },
      "service_enabled": {
        "type": "boolean",
        "description": "Describes whether a secondary web service is responding to requests (true) or not (false). Defaults to true. Disabled services don't produce any costs.",
        "default": true
      },
      "service_url": {
        "type": "string",
        "format": "url",
        "description": "URL at which the secondary web service is accessible. Doesn't necessarily need to be located within the API.",
        "example": "https://openeo.org/wms/wms-a3cca9"
      },
      "service_id": {
        "type": "string",
        "description": "Unique identifier of a secondary web service that is generated by the back-end during creation. MUST match the specified pattern.",
        "pattern": "^[A-Za-z0-9_\\-\\.~]+$",
        "example": "wms-a3cca9"
      },
      "argument": {
        "type": "object",
        "title": "Argument",
        "description": "Describes a general argument for various entities.",
        "required": [
          "description"
        ],
        "properties": {
          "description": {
            "type": "string",
            "description": "A brief description of the argument."
          },
          "required": {
            "type": "boolean",
            "description": "Determines whether this argument is mandatory.",
            "default": false
          },
          "default": {
            "description": "The default value represents what would be assumed by the consumer of the input as the value of the argument if none is provided. The value MUST conform to the defined type for the argument defined at the same level. For example, if type is string, then default can be \"foo\" but cannot be 1."
          },
          "minimum": {
            "type": "number",
            "description": "Minimum value allowed for numeric arguments."
          },
          "maximum": {
            "type": "number",
            "description": "Maximum value allowed for numeric arguments."
          },
          "enum": {
            "type": "array",
            "description": "List of allowed values for this argument. To represent examples that cannot be naturally represented in JSON, a string value can be used to contain the example with escaping where necessary.",
            "items": {
              "description": "A single value allowed for this argument."
            }
          },
          "example": {
            "description": "A free-form property to include an example for this argument. To represent examples that cannot be naturally represented in JSON, a string value can be used to contain the example with escaping where necessary."
          }
        },
        "example": {
          "description": "A percentage between 0 and 100.",
          "required": true,
          "minimum": 0,
          "maximum": 100
        }
      },
      "job_error": {
        "title": "Batch Job Error",
        "description": "An error message that describes the problem during the batch job execution. May only be available if the `status` is `error`. The error MUST be cleared if the job is started again (i.e. the status changes to `queue`).",
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/error_id"
          },
          "code": {
            "$ref": "#/components/schemas/error_code"
          },
          "message": {
            "$ref": "#/components/schemas/error_message"
          },
          "links": {
            "$ref": "#/components/schemas/error_links"
          }
        }
      },
      "error": {
        "title": "General Error",
        "description": "An error object declares addtional information about a client-side or server-side error. The [openEO documentation](https://open-eo.github.io/openeo-api/v/0.4.2/errors/index.html) provides additional information regarding error handling and a list of potential error codes.",
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/error_id"
          },
          "code": {
            "$ref": "#/components/schemas/error_code"
          },
          "message": {
            "$ref": "#/components/schemas/error_message"
          },
          "links": {
            "$ref": "#/components/schemas/error_links"
          }
        }
      },
      "error_id": {
        "type": "string",
        "description": "A back-end may add a unique identifier to the error response to be able to log and track errors with further non-disclosable details.  A client could communicate this id to a back-end provider to get further information.",
        "example": "550e8400-e29b-11d4-a716-446655440000"
      },
      "error_code": {
        "type": "string",
        "description": "The code is either one of the standardized error codes or a custom error code.",
        "example": "SampleError"
      },
      "error_message": {
        "type": "string",
        "description": "A message explaining what the client may need to change or what difficulties the server is facing. By default the message must be sent in English language. Content Negotiation is used to localize the error messages: If an Accept-Language header is sent by the client and a translation is available, the message should be translated accordingly and the Content-Language header must be present in the response.",
        "example": "A sample error message."
      },
      "error_links": {
        "description": "Additional links related to this error, e.g. a resource that is explaining the error and potential solutions in-depth or a contact e-mail address.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/link"
        },
        "example": [
          {
            "href": "http://www.openeo.org/docs/errors/SampleError",
            "rel": "about"
          }
        ]
      },
      "json_schema": {
        "type": "object",
        "title": "JSON Schema",
        "description": "A schema object according to the specification of [JSON Schema draft-07](http://json-schema.org/). Additional values for `format` are defined [centrally in the API documentation](https://open-eo.github.io/openeo-api/v/0.4.2/processes/index.html), e.g. bbox or crs. Callback parameters are defined with the custom schema keyword `parameters`."
      },
      "process_media_type": {
        "type": "string",
        "description": "The media (MIME) type that the value is encoded in.",
        "default": "application/json"
      },
      "file": {
        "title": "Workspace File",
        "type": "object",
        "required": [
          "path"
        ],
        "properties": {
          "path": {
            "type": "string",
            "description": "Path of the file, relative to the user's root directory. MUST NOT start with a slash and MUST NOT be url-encoded.",
            "example": "folder/file.txt"
          },
          "size": {
            "type": "integer",
            "description": "File size in bytes.",
            "example": 1024
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time the file has lastly been modified, formatted as a [RFC 3339](https://www.ietf.org/rfc/rfc3339) date-time.",
            "example": "2018-01-03T10:55:29Z"
          }
        }
      }
    },
    "responses": {
      "created": {
        "description": "The resource has been created successfully and the location of the newly created resource is advertized by the back-end.\n\nExamples:\n* `POST /services` redirects to `GET /services/{service_id}`\n* `POST /jobs` redirects to `GET /jobs/{job_id}`",
        "headers": {
          "Location": {
            "required": true,
            "schema": {
              "description": "URL to the newly created resource.",
              "format": "url",
              "type": "string",
              "example": "https://openeo.org/api/v0.4/resource/123"
            }
          },
          "OpenEO-Identifier": {
            "required": true,
            "schema": {
              "description": "Unique Identifier (e.g. job id or service id) of the newly created resource.",
              "type": "string",
              "example": "123"
            }
          }
        }
      },
      "client_error": {
        "description": "The request can't be fulfilled due to an error on client-side, i.e. the request is invalid. The client should not repeat the request without modifications. The response body SHOULD contain a JSON error object. MUST be any HTTP status code specified in [RFC 7231](https://tools.ietf.org/html/rfc7231#section-6.6). This request usually does not respond with HTTP status codes 401 and 403 due to missing authorization. HTTP status code 404 should be used if the value of a path parameter is invalid.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      },
      "client_error_auth": {
        "description": "The request can't be fulfilled due to an error on client-side, i.e. the request is invalid. The client should not repeat the request without modifications. The response body SHOULD contain a JSON error object. MUST be any HTTP status code specified in [RFC 7231](https://tools.ietf.org/html/rfc7231#section-6.6). This request MUST respond with HTTP status codes 401 if authorization is required or 403 if the authorization failed or access is forbidden in general to the authenticated user. HTTP status code 404 should be used if the value of a path parameter is invalid.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      },
      "server_error": {
        "description": "The request can't be fulfilled due to an error at the back-end. The error is never the client’s fault and therefore it is reasonable for the client to retry the exact same request that triggered this response. The response body SHOULD contain a JSON error object. MUST be any HTTP status code specified in [RFC 7231](https://tools.ietf.org/html/rfc7231#section-6.6).",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      }
    },
    "parameters": {
      "user_id": {
        "name": "user_id",
        "in": "path",
        "description": "Unique user identifier.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/user_id"
        }
      },
      "process_graph_id": {
        "name": "process_graph_id",
        "in": "path",
        "description": "Unique process graph identifier.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/process_graph_id"
        }
      },
      "service_id": {
        "name": "service_id",
        "in": "path",
        "description": "Unique secondary web service identifier.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/service_id"
        }
      },
      "job_id": {
        "name": "job_id",
        "in": "path",
        "description": "Unique job identifier.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/job_id"
        }
      },
      "file_path": {
        "name": "path",
        "in": "path",
        "description": "Path of the file, relative to the user's root directory.\r\n\r\n**Note:** Folder and file names in the path MUST be url-encoded. The path separator `/` and the file extension separator `.` MUST NOT be url-encoded. This may be shown incorrectly in rendered versions due to [OpenAPI 3 not supporting path parameters which contain slashes](https://github.com/OAI/OpenAPI-Specification/issues/892).",
        "required": true,
        "schema": {
          "type": "string"
        },
        "examples": {
          "normal": {
            "description": "A path without special chars. It describes a file `europe.geojson` in a folder called `borders`.",
            "value": "borders/europe.geojson"
          },
          "specialchars": {
            "description": "A path with special chars. It describes a file `münster.shp` in folders called `europe` and `österreich`.",
            "value": "europe/%C3%B6sterreich/m%C3%BCnster.shp"
          }
        }
      }
    },
    "requestBodies": {
      "process_graph": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/process_graph"
            }
          }
        },
        "description": "Description of one or more (chained) processes.",
        "required": true
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer"
      },
      "Basic": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}